'use client'

import React, { useState, useEffect, useMemo, useCallback } from 'react'
import Link from 'next/link'

interface VocabularyWord {
  word: string
  transcription: string
  translation: string
}

interface VocabularyPhrase {
  phrase: string
  translation: string
}

interface CategoryData {
  title: string
  icon: string
  words: VocabularyWord[]
  phrases: VocabularyPhrase[]
}

interface Category {
  id: string
  title: string
  emoji: string
  description: string
  words: VocabularyWord[]
  phrases: VocabularyPhrase[]
  position: { top: string; left: string }
  completed: boolean
}

const vocabularyData: Record<string, CategoryData> = {
  planning: {
    title: "–ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –ø–æ–¥–æ—Ä–æ–∂—ñ",
    icon: "üìã",
    words: [
      { word: "booking", transcription: "[–±—É–∫—ñ–Ω–≥]", translation: "–±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è" },
      { word: "reservation", transcription: "[—Ä–µ–∑–µ—Ä–≤–µ–π—à–Ω]", translation: "—Ä–µ–∑–µ—Ä–≤–∞—Ü—ñ—è" },
      { word: "itinerary", transcription: "[–∞–π—Ç—ñ–Ω–µ—Ä—ñ]", translation: "–º–∞—Ä—à—Ä—É—Ç" },
      { word: "schedule", transcription: "[—à–µ–¥—å—é–ª]", translation: "—Ä–æ–∑–∫–ª–∞–¥" },
      { word: "destination", transcription: "[–¥–µ—Å—Ç—ñ–Ω–µ–π—à–Ω]", translation: "–ø—É–Ω–∫—Ç –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è" },
      { word: "departure", transcription: "[–¥—ñ–ø–∞—Ä—á–µ—Ä]", translation: "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è" },
      { word: "arrival", transcription: "[–µ—Ä–∞–π–≤–ª]", translation: "–ø—Ä–∏–±—É—Ç—Ç—è" },
      { word: "duration", transcription: "[–¥—å—é—Ä–µ–π—à–Ω]", translation: "—Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å" },
      { word: "route", transcription: "[—Ä—É—Ç]", translation: "–º–∞—Ä—à—Ä—É—Ç" },
      { word: "trip", transcription: "[—Ç—Ä—ñ–ø]", translation: "–ø–æ–¥–æ—Ä–æ–∂" },
      { word: "journey", transcription: "[–¥–∂–æ—Ä–Ω—ñ]", translation: "–º–∞–Ω–¥—Ä—ñ–≤–∫–∞" },
      { word: "vacation", transcription: "[–≤–µ–∫–µ–π—à–Ω]", translation: "–≤—ñ–¥–ø—É—Å—Ç–∫–∞" },
      { word: "holiday", transcription: "[—Ö–æ–ª—ñ–¥–µ–π]", translation: "—Å–≤—è—Ç–æ, –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫" },
      { word: "tour", transcription: "[—Ç—É—Ä]", translation: "—Ç—É—Ä" },
      { word: "excursion", transcription: "[–µ–∫—Å–∫–µ—Ä—à–Ω]", translation: "–µ–∫—Å–∫—É—Ä—Å—ñ—è" },
      { word: "guide", transcription: "[–≥–∞–π–¥]", translation: "–≥—ñ–¥" },
      { word: "passport", transcription: "[–ø–∞—Å–ø–æ—Ä—Ç]", translation: "–ø–∞—Å–ø–æ—Ä—Ç" },
      { word: "visa", transcription: "[–≤—ñ–∑–∞]", translation: "–≤—ñ–∑–∞" },
      { word: "insurance", transcription: "[—ñ–Ω—à—É—Ä–µ–Ω—Å]", translation: "—Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è" },
      { word: "currency", transcription: "[–∫–µ—Ä–µ–Ω—Å—ñ]", translation: "–≤–∞–ª—é—Ç–∞" },
      { word: "budget", transcription: "[–±–∞–¥–∂–µ—Ç]", translation: "–±—é–¥–∂–µ—Ç" },
      { word: "hotel", transcription: "[—Ö–æ—Ç–µ–ª]", translation: "–≥–æ—Ç–µ–ª—å" },
      { word: "hostel", transcription: "[—Ö–æ—Å—Ç–µ–ª]", translation: "—Ö–æ—Å—Ç–µ–ª" },
      { word: "luggage", transcription: "[–ª–∞–≥—ñ–¥–∂]", translation: "–±–∞–≥–∞–∂" },
      { word: "suitcase", transcription: "[—Å—É—Ç–∫–µ–π—Å]", translation: "–≤–∞–ª—ñ–∑–∞" }
    ],
    phrases: [
      { phrase: "I'd like to book a room", translation: "–Ø —Ö–æ—Ç—ñ–≤ –±–∏ –∑–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ –∫—ñ–º–Ω–∞—Ç—É" },
      { phrase: "What's the best time to visit?", translation: "–ö–æ–ª–∏ –Ω–∞–π–∫—Ä–∞—â–µ –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏?" },
      { phrase: "How much does it cost?", translation: "–°–∫—ñ–ª—å–∫–∏ —Ü–µ –∫–æ—à—Ç—É—î?" },
      { phrase: "Do I need a visa?", translation: "–ß–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –º–µ–Ω—ñ –≤—ñ–∑–∞?" },
      { phrase: "What's included in the price?", translation: "–©–æ –≤–∫–ª—é—á–µ–Ω–æ –≤ —Ü—ñ–Ω—É?" },
      { phrase: "Can you recommend a good hotel?", translation: "–ß–∏ –º–æ–∂–µ—Ç–µ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–≤–∞—Ç–∏ —Ö–æ—Ä–æ—à–∏–π –≥–æ—Ç–µ–ª—å?" },
      { phrase: "Where can I exchange money?", translation: "–î–µ —è –º–æ–∂—É –æ–±–º—ñ–Ω—è—Ç–∏ –≥—Ä–æ—à—ñ?" },
      { phrase: "What's the weather like?", translation: "–Ø–∫–∞ —Ç–∞–º –ø–æ–≥–æ–¥–∞?" },
      { phrase: "How long is the flight?", translation: "–°–∫—ñ–ª—å–∫–∏ —Ç—Ä–∏–≤–∞—î –ø–æ–ª—ñ—Ç?" },
      { phrase: "I need travel insurance", translation: "–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ —Ç—É—Ä–∏—Å—Ç–∏—á–Ω–∞ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞" },
      { phrase: "Can I cancel my booking?", translation: "–ß–∏ –º–æ–∂—É —è —Å–∫–∞—Å—É–≤–∞—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è?" },
      { phrase: "What documents do I need?", translation: "–Ø–∫—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ?" },
      { phrase: "Is there a direct flight?", translation: "–ß–∏ —î –ø—Ä—è–º–∏–π —Ä–µ–π—Å?" },
      { phrase: "What's the departure time?", translation: "–û –∫–æ—Ç—Ä—ñ–π —á–∞—Å –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è?" },
      { phrase: "How far is it from the airport?", translation: "–Ø–∫ –¥–∞–ª–µ–∫–æ —Ü–µ –≤—ñ–¥ –∞–µ—Ä–æ–ø–æ—Ä—Ç—É?" }
    ]
  },
  airport: {
    title: "–í –∞–µ—Ä–æ–ø–æ—Ä—Ç—É",
    icon: "‚úàÔ∏è",
    words: [
      { word: "airport", transcription: "[–µ–∞–ø–æ—Ä—Ç]", translation: "–∞–µ—Ä–æ–ø–æ—Ä—Ç" },
      { word: "flight", transcription: "[—Ñ–ª–∞–π—Ç]", translation: "—Ä–µ–π—Å" },
      { word: "boarding pass", transcription: "[–±–æ—Ä–¥—ñ–Ω–≥ –ø–∞—Å]", translation: "–ø–æ—Å–∞–¥–æ—á–Ω–∏–π –∫–≤–∏—Ç–æ–∫" },
      { word: "gate", transcription: "[–≥–µ–π—Ç]", translation: "–≤–∏—Ö—ñ–¥ –Ω–∞ –ø–æ—Å–∞–¥–∫—É" },
      { word: "check-in", transcription: "[—á–µ–∫ —ñ–Ω]", translation: "—Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è" },
      { word: "baggage", transcription: "[–±–µ–≥—ñ–¥–∂]", translation: "–±–∞–≥–∞–∂" },
      { word: "luggage", transcription: "[–ª–∞–≥—ñ–¥–∂]", translation: "–±–∞–≥–∞–∂" },
      { word: "suitcase", transcription: "[—Å—É—Ç–∫–µ–π—Å]", translation: "–≤–∞–ª—ñ–∑–∞" },
      { word: "carry-on", transcription: "[–∫–µ—Ä—ñ –æ–Ω]", translation: "—Ä—É—á–Ω–∞ –ø–æ–∫–ª–∞–∂–∞" },
      { word: "security", transcription: "[—Å—ñ–∫—å—é—Ä—ñ—Ç—ñ]", translation: "–±–µ–∑–ø–µ–∫–∞" },
      { word: "customs", transcription: "[–∫–∞—Å—Ç–º–∑]", translation: "–º–∏—Ç–Ω–∏—Ü—è" },
      { word: "passport control", transcription: "[–ø–∞—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ç—Ä–æ–ª]", translation: "–ø–∞—Å–ø–æ—Ä—Ç–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å" },
      { word: "delay", transcription: "[–¥—ñ–ª–µ–π]", translation: "–∑–∞—Ç—Ä–∏–º–∫–∞" },
      { word: "cancelled", transcription: "[–∫–µ–Ω—Å–µ–ª–¥]", translation: "—Å–∫–∞—Å–æ–≤–∞–Ω–∏–π" },
      { word: "departure board", transcription: "[–¥—ñ–ø–∞—Ä—á–µ –±–æ—Ä–¥]", translation: "—Ç–∞–±–ª–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—å" },
      { word: "arrival board", transcription: "[–µ—Ä–∞–π–≤–ª –±–æ—Ä–¥]", translation: "—Ç–∞–±–ª–æ –ø—Ä–∏–±—É—Ç—Ç—ñ–≤" },
      { word: "terminal", transcription: "[—Ç–µ—Ä–º—ñ–Ω–∞–ª]", translation: "—Ç–µ—Ä–º—ñ–Ω–∞–ª" },
      { word: "runway", transcription: "[—Ä–∞–Ω–≤–µ–π]", translation: "–∑–ª—ñ—Ç–Ω–∞ —Å–º—É–≥–∞" },
      { word: "pilot", transcription: "[–ø–∞–π–ª–µ—Ç]", translation: "–ø—ñ–ª–æ—Ç" },
      { word: "flight attendant", transcription: "[—Ñ–ª–∞–π—Ç –µ—Ç–µ–Ω–¥–µ–Ω—Ç]", translation: "–±–æ—Ä—Ç–ø—Ä–æ–≤—ñ–¥–Ω–∏–∫" },
      { word: "seat", transcription: "[—Å—ñ—Ç]", translation: "–º—ñ—Å—Ü–µ" },
      { word: "window seat", transcription: "[–≤—ñ–Ω–¥–æ—É —Å—ñ—Ç]", translation: "–º—ñ—Å—Ü–µ –±—ñ–ª—è –≤—ñ–∫–Ω–∞" }
    ],
    phrases: [
      { phrase: "Where is check-in?", translation: "–î–µ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è?" },
      { phrase: "I'd like a window seat", translation: "–Ø —Ö–æ—Ç—ñ–≤ –±–∏ –º—ñ—Å—Ü–µ –±—ñ–ª—è –≤—ñ–∫–Ω–∞" },
      { phrase: "Is my flight on time?", translation: "–ú—ñ–π —Ä–µ–π—Å –≤—á–∞—Å–Ω–æ?" },
      { phrase: "Where is gate 5?", translation: "–î–µ –≤–∏—Ö—ñ–¥ 5?" },
      { phrase: "How much can I carry on?", translation: "–°–∫—ñ–ª—å–∫–∏ —è –º–æ–∂—É –≤–∑—è—Ç–∏ –≤ —Ä—É—á–Ω—É –ø–æ–∫–ª–∞–∂—É?" },
      { phrase: "My luggage is missing", translation: "–ú—ñ–π –±–∞–≥–∞–∂ –∑–Ω–∏–∫" },
      { phrase: "I need to declare this", translation: "–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–¥–µ–∫–ª–∞—Ä—É–≤–∞—Ç–∏ —Ü–µ" },
      { phrase: "Is this the line for security?", translation: "–¶–µ —á–µ—Ä–≥–∞ –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å –±–µ–∑–ø–µ–∫–∏?" },
      { phrase: "When do we board?", translation: "–ö–æ–ª–∏ –º–∏ —Å–∞–¥–∏–º–æ—Å—è?" },
      { phrase: "My flight is delayed", translation: "–ú—ñ–π —Ä–µ–π—Å –∑–∞—Ç—Ä–∏–º—É—î—Ç—å—Å—è" },
      { phrase: "Can I upgrade my seat?", translation: "–ß–∏ –º–æ–∂—É —è –ø–æ–∫—Ä–∞—â–∏—Ç–∏ —Å–≤–æ—î –º—ñ—Å—Ü–µ?" },
      { phrase: "Where can I find a taxi?", translation: "–î–µ —è –º–æ–∂—É –∑–Ω–∞–π—Ç–∏ —Ç–∞–∫—Å—ñ?" },
      { phrase: "Is there free wifi?", translation: "–ß–∏ —î –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π wifi?" },
      { phrase: "Where is the baggage claim?", translation: "–î–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–≥–∞–∂—É?" },
      { phrase: "I lost my boarding pass", translation: "–Ø –∑–∞–≥—É–±–∏–≤ —Å–≤—ñ–π –ø–æ—Å–∞–¥–æ—á–Ω–∏–π —Ç–∞–ª–æ–Ω" },
      { phrase: "What terminal is my flight?", translation: "–í —è–∫–æ–º—É —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ –º—ñ–π —Ä–µ–π—Å?" },
      { phrase: "The flight is boarding now", translation: "–ó–∞—Ä–∞–∑ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –ø–æ—Å–∞–¥–∫–∞ –Ω–∞ —Ä–µ–π—Å" },
      { phrase: "Please fasten your seatbelt", translation: "–ë—É–¥—å –ª–∞—Å–∫–∞, –ø—Ä–∏—Å—Ç–µ–±–Ω—ñ—Ç—å —Ä–µ–º—ñ–Ω—å –±–µ–∑–ø–µ–∫–∏" }
    ]
  },
  hotel: {
    title: "–í –≥–æ—Ç–µ–ª—ñ",
    icon: "üè®",
    words: [
      { word: "hotel", transcription: "[–≥–æ—Ç–µ–ª]", translation: "–≥–æ—Ç–µ–ª—å" },
      { word: "reservation", transcription: "[—Ä–µ–∑–µ—Ä–≤–µ–π—à–Ω]", translation: "–±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è" },
      { word: "reception", transcription: "[—Ä—ñ—Å–µ–ø—à–Ω]", translation: "—Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è" },
      { word: "room", transcription: "[—Ä—É–º]", translation: "–∫—ñ–º–Ω–∞—Ç–∞" },
      { word: "key card", transcription: "[–∫—ñ –∫–∞—Ä–¥]", translation: "–∫–ª—é—á-–∫–∞—Ä—Ç–∞" },
      { word: "check-in", transcription: "[—á–µ–∫ —ñ–Ω]", translation: "–∑–∞—Å–µ–ª–µ–Ω–Ω—è" },
      { word: "check-out", transcription: "[—á–µ–∫ –∞—É—Ç]", translation: "–≤–∏—Å–µ–ª–µ–Ω–Ω—è" },
      { word: "single room", transcription: "[—Å—ñ–Ω–≥–ª —Ä—É–º]", translation: "–æ–¥–Ω–æ–º—ñ—Å–Ω–∏–π –Ω–æ–º–µ—Ä" },
      { word: "double room", transcription: "[–¥–∞–±–ª —Ä—É–º]", translation: "–¥–≤–æ–º—ñ—Å–Ω–∏–π –Ω–æ–º–µ—Ä" },
      { word: "suite", transcription: "[—Å–≤—ñ—Ç]", translation: "–ª—é–∫—Å" },
      { word: "breakfast", transcription: "[–±—Ä–µ–∫—Ñ–∞—Å—Ç]", translation: "—Å–Ω—ñ–¥–∞–Ω–æ–∫" },
      { word: "elevator", transcription: "[–µ–ª—ñ–≤–µ–π—Ç–æ—Ä]", translation: "–ª—ñ—Ñ—Ç" },
      { word: "floor", transcription: "[—Ñ–ª–æ—Ä]", translation: "–ø–æ–≤–µ—Ä—Ö" },
      { word: "towel", transcription: "[—Ç–∞—É–µ–ª]", translation: "—Ä—É—à–Ω–∏–∫" },
      { word: "blanket", transcription: "[–±–ª–µ–Ω–∫–µ—Ç]", translation: "–∫–æ–≤–¥—Ä–∞" },
      { word: "pillow", transcription: "[–ø—ñ–ª–æ—É]", translation: "–ø–æ–¥—É—à–∫–∞" },
      { word: "bathroom", transcription: "[–±–∞—Å—Ä—É–º]", translation: "–≤–∞–Ω–Ω–∞ –∫—ñ–º–Ω–∞—Ç–∞" },
      { word: "shower", transcription: "[—à–∞—É–µ—Ä]", translation: "–¥—É—à" },
      { word: "air conditioning", transcription: "[–µ–∞ –∫–æ–Ω–¥–∏—à–Ω—ñ–Ω–≥]", translation: "–∫–æ–Ω–¥–∏—Ü—ñ–æ–Ω–µ—Ä" },
      { word: "wifi", transcription: "[–≤–∞–π—Ñ–∞–π]", translation: "–≤–∞–π—Ñ–∞–π" },
      { word: "cleaning", transcription: "[–∫–ª—ñ–Ω–∏–Ω–≥]", translation: "–ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è" },
      { word: "receptionist", transcription: "[—Ä—ñ—Å–µ–ø—à–Ω—ñ—Å—Ç]", translation: "–∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä" },
      { word: "lobby", transcription: "[–ª–æ–±—ñ]", translation: "–≤–µ—Å—Ç–∏–±—é–ª—å" },
      { word: "service", transcription: "[—Å–µ—Ä–≤—ñ—Å]", translation: "—Å–µ—Ä–≤—ñ—Å" },
      { word: "laundry", transcription: "[–ª–æ–Ω–¥—Ä—ñ]", translation: "–ø—Ä–∞–ª—å–Ω—è" },
      { word: "safe", transcription: "[—Å–µ–π—Ñ]", translation: "—Å–µ–π—Ñ" },
      { word: "view", transcription: "[–≤'—é]", translation: "–≤–∏–¥" }
    ],
    phrases: [
      { phrase: "I have a reservation", translation: "–£ –º–µ–Ω–µ —î –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è" },
      { phrase: "Can I check in?", translation: "–ú–æ–∂–Ω–∞ –∑–∞—Å–µ–ª–∏—Ç–∏—Å—è?" },
      { phrase: "What time is breakfast?", translation: "–û –∫–æ—Ç—Ä—ñ–π —Å–Ω—ñ–¥–∞–Ω–æ–∫?" },
      { phrase: "Can I have the wifi password?", translation: "–ú–æ–∂–Ω–∞ –ø–∞—Ä–æ–ª—å –≤—ñ–¥ –≤–∞–π—Ñ–∞—é?" },
      { phrase: "Is breakfast included?", translation: "–°–Ω—ñ–¥–∞–Ω–æ–∫ –≤–∫–ª—é—á–µ–Ω–æ?" },
      { phrase: "I need more towels", translation: "–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—ñ–ª—å—à–µ —Ä—É—à–Ω–∏–∫—ñ–≤" },
      { phrase: "Can I have a wake-up call?", translation: "–ú–æ–∂–Ω–∞ –∑–∞–º–æ–≤–∏—Ç–∏ –¥–∑–≤—ñ–Ω–æ–∫ –¥–ª—è –ø—Ä–æ–±—É–¥–∂–µ–Ω–Ω—è?" },
      { phrase: "Where is the elevator?", translation: "–î–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ª—ñ—Ñ—Ç?" },
      { phrase: "Can I get a late check-out?", translation: "–ú–æ–∂–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ –≤–∏—Å–µ–ª–µ–Ω–Ω—è?" },
      { phrase: "My room is not clean", translation: "–ú–æ—è –∫—ñ–º–Ω–∞—Ç–∞ –Ω–µ –ø—Ä–∏–±—Ä–∞–Ω–∞" },
      { phrase: "The air conditioning isn't working", translation: "–ö–æ–Ω–¥–∏—Ü—ñ–æ–Ω–µ—Ä –Ω–µ –ø—Ä–∞—Ü—é—î" },
      { phrase: "Can I change my room?", translation: "–ú–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏ –∫—ñ–º–Ω–∞—Ç—É?" },
      { phrase: "Is there a laundry service?", translation: "–Ñ –ø–æ—Å–ª—É–≥–∞ –ø—Ä–∞–Ω–Ω—è?" },
      { phrase: "Where is the reception?", translation: "–î–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —Ä–µ—Ü–µ–ø—Ü—ñ—è?" },
      { phrase: "Can I leave my luggage here?", translation: "–ú–æ–∂–Ω–∞ –∑–∞–ª–∏—à–∏—Ç–∏ –±–∞–≥–∞–∂ —Ç—É—Ç?" },
      { phrase: "How do I get to my room?", translation: "–Ø–∫ –ø—Ä–æ–π—Ç–∏ –¥–æ –º–æ—î—ó –∫—ñ–º–Ω–∞—Ç–∏?" },
      { phrase: "Is there a safe in the room?", translation: "–£ –Ω–æ–º–µ—Ä—ñ —î —Å–µ–π—Ñ?" },
      { phrase: "Can I have an extra pillow?", translation: "–ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—É –ø–æ–¥—É—à–∫—É?" },
      { phrase: "What is the view from the room?", translation: "–Ø–∫–∏–π –≤–∏–≥–ª—è–¥ –∑ –∫—ñ–º–Ω–∞—Ç–∏?" },
      { phrase: "Where can I park my car?", translation: "–î–µ –º–æ–∂–Ω–∞ –ø—Ä–∏–ø–∞—Ä–∫—É–≤–∞—Ç–∏ –º–∞—à–∏–Ω—É?" }
    ]
  },
  restaurant: {
    title: "–í —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ñ",
    icon: "üçΩÔ∏è",
    words: [
      { word: "restaurant", transcription: "[—Ä–µ—Å—Ç–∞—Ä–∞–Ω—Ç]", translation: "—Ä–µ—Å—Ç–æ—Ä–∞–Ω" },
      { word: "menu", transcription: "[–º–µ–Ω—é]", translation: "–º–µ–Ω—é" },
      { word: "waiter", transcription: "[–≤–µ–π—Ç—Ä]", translation: "–æ—Ñ—ñ—Ü—ñ–∞–Ω—Ç" },
      { word: "waitress", transcription: "[–≤–µ–π—Ç—Ä–µ—Å]", translation: "–æ—Ñ—ñ—Ü—ñ–∞–Ω—Ç–∫–∞" },
      { word: "table", transcription: "[—Ç–µ–π–±–ª]", translation: "—Å—Ç—ñ–ª" },
      { word: "reservation", transcription: "[—Ä–µ–∑–µ—Ä–≤–µ–π—à–Ω]", translation: "–±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è" },
      { word: "order", transcription: "[–æ—Ä–¥–µ—Ä]", translation: "–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è" },
      { word: "bill", transcription: "[–±—ñ–ª]", translation: "—Ä–∞—Ö—É–Ω–æ–∫" },
      { word: "tip", transcription: "[—Ç—ñ–ø]", translation: "—á–∞–π–æ–≤—ñ" },
      { word: "dish", transcription: "[–¥—ñ—à]", translation: "—Å—Ç—Ä–∞–≤–∞" },
      { word: "appetizer", transcription: "[–µ–ø–µ—Ç–∞–π–∑–µ—Ä]", translation: "–∑–∞–∫—É—Å–∫–∞" },
      { word: "main course", transcription: "[–º–µ–π–Ω –∫–æ—É—Ä—Å]", translation: "–æ—Å–Ω–æ–≤–Ω–∞ —Å—Ç—Ä–∞–≤–∞" },
      { word: "dessert", transcription: "[–¥–µ–∑–µ—Ä—Ç]", translation: "–¥–µ—Å–µ—Ä—Ç" },
      { word: "drink", transcription: "[–¥—Ä—ñ–Ω–∫]", translation: "–Ω–∞–ø—ñ–π" },
      { word: "water", transcription: "[–≤–æ—Ç–µ—Ä]", translation: "–≤–æ–¥–∞" },
      { word: "juice", transcription: "[–¥–∂—É—Å]", translation: "—Å—ñ–∫" },
      { word: "wine", transcription: "[–≤–∞–π–Ω]", translation: "–≤–∏–Ω–æ" },
      { word: "beer", transcription: "[–±—ñ—Ä]", translation: "–ø–∏–≤–æ" },
      { word: "fork", transcription: "[—Ñ–æ—Ä–∫]", translation: "–≤–∏–¥–µ–ª–∫–∞" },
      { word: "knife", transcription: "[–Ω–∞–π—Ñ]", translation: "–Ω—ñ–∂" },
      { word: "spoon", transcription: "[—Å–ø—É–Ω]", translation: "–ª–æ–∂–∫–∞" },
      { word: "napkin", transcription: "[–Ω–µ–ø–∫—ñ–Ω]", translation: "—Å–µ—Ä–≤–µ—Ç–∫–∞" },
      { word: "salt", transcription: "[—Å–æ–ª—Ç]", translation: "—Å—ñ–ª—å" },
      { word: "pepper", transcription: "[–ø–µ–ø–µ—Ä]", translation: "–ø–µ—Ä–µ—Ü—å" },
      { word: "bread", transcription: "[–±—Ä–µ–¥]", translation: "—Ö–ª—ñ–±" },
      { word: "soup", transcription: "[—Å—É–ø]", translation: "—Å—É–ø" },
      { word: "salad", transcription: "[—Å–∞–ª–∞–¥]", translation: "—Å–∞–ª–∞—Ç" },
      { word: "meat", transcription: "[–º—ñ—Ç]", translation: "–º'—è—Å–æ" },
      { word: "fish", transcription: "[—Ñ—ñ—à]", translation: "—Ä–∏–±–∞" },
      { word: "vegetarian", transcription: "[–≤–µ–¥–∂–µ—Ç–µ—Ä—ñ–∞–Ω]", translation: "–≤–µ–≥–µ—Ç–∞—Ä—ñ–∞–Ω–µ—Ü—å" }
    ],
    phrases: [
      { phrase: "A table for two, please", translation: "–°—Ç—ñ–ª –Ω–∞ –¥–≤–æ—Ö, –±—É–¥—å –ª–∞—Å–∫–∞" },
      { phrase: "Can I see the menu?", translation: "–ú–æ–∂–Ω–∞ –º–µ–Ω—é?" },
      { phrase: "I would like to order", translation: "–Ø —Ö–æ—Ç—ñ–≤ –±–∏ –∑—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è" },
      { phrase: "What do you recommend?", translation: "–©–æ –≤–∏ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É—î—Ç–µ?" },
      { phrase: "Is this dish vegetarian?", translation: "–¶—è —Å—Ç—Ä–∞–≤–∞ –≤–µ–≥–µ—Ç–∞—Ä—ñ–∞–Ω—Å—å–∫–∞?" },
      { phrase: "Can I have the bill, please?", translation: "–ú–æ–∂–Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫, –±—É–¥—å –ª–∞—Å–∫–∞?" },
      { phrase: "Is service included?", translation: "–ß–∞–π–æ–≤—ñ –≤–∫–ª—é—á–µ–Ω—ñ?" },
      { phrase: "Can I have some water?", translation: "–ú–æ–∂–Ω–∞ —Ç—Ä–æ—Ö–∏ –≤–æ–¥–∏?" },
      { phrase: "I am allergic to nuts", translation: "–£ –º–µ–Ω–µ –∞–ª–µ—Ä–≥—ñ—è –Ω–∞ –≥–æ—Ä—ñ—Ö–∏" },
      { phrase: "No onions, please", translation: "–ë–µ–∑ —Ü–∏–±—É–ª—ñ, –±—É–¥—å –ª–∞—Å–∫–∞" },
      { phrase: "Can I have this to go?", translation: "–ú–æ–∂–Ω–∞ —Ü–µ –∑ —Å–æ–±–æ—é?" },
      { phrase: "The food is delicious", translation: "–á–∂–∞ —Å–º–∞—á–Ω–∞" },
      { phrase: "Could we have some bread?", translation: "–ú–æ–∂–Ω–∞ —Ç—Ä–æ—Ö–∏ —Ö–ª—ñ–±–∞?" },
      { phrase: "Do you have a kids menu?", translation: "–£ –≤–∞—Å —î –¥–∏—Ç—è—á–µ –º–µ–Ω—é?" },
      { phrase: "Can I pay by card?", translation: "–ú–æ–∂–Ω–∞ –æ–ø–ª–∞—Ç–∏—Ç–∏ –∫–∞—Ä—Ç–∫–æ—é?" },
      { phrase: "Is there a table available?", translation: "–Ñ –≤—ñ–ª—å–Ω–∏–π —Å—Ç—ñ–ª?" },
      { phrase: "I would like a glass of wine", translation: "–Ø —Ö–æ—Ç—ñ–≤ –±–∏ –∫–µ–ª–∏—Ö –≤–∏–Ω–∞" },
      { phrase: "Can I get the wifi password?", translation: "–ú–æ–∂–Ω–∞ –ø–∞—Ä–æ–ª—å –≤—ñ–¥ –≤–∞–π—Ñ–∞—é?" },
      { phrase: "Could you bring the dessert menu?", translation: "–ú–æ–∂–Ω–∞ –º–µ–Ω—é –¥–µ—Å–µ—Ä—Ç—ñ–≤?" },
      { phrase: "Can I have a receipt?", translation: "–ú–æ–∂–Ω–∞ —á–µ–∫?" },
      { phrase: "Excuse me, we are ready to order", translation: "–í–∏–±–∞—á—Ç–µ, –º–∏ –≥–æ—Ç–æ–≤—ñ –∑–∞–º–æ–≤–∏—Ç–∏" },
      { phrase: "Could you pack this for me?", translation: "–ú–æ–∂–µ—Ç–µ —Ü–µ –∑–∞–ø–∞–∫—É–≤–∞—Ç–∏ –¥–ª—è –º–µ–Ω–µ?" },
      { phrase: "Is there a vegetarian option?", translation: "–Ñ –≤–µ–≥–µ—Ç–∞—Ä—ñ–∞–Ω—Å—å–∫–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç?" },
      { phrase: "Can I have a coffee?", translation: "–ú–æ–∂–Ω–∞ –∫–∞–≤—É?" }
    ]
  },
  transport: {
    title: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
    icon: "üöå",
    words: [
      { word: "bus", transcription: "[–±–∞—Å]", translation: "–∞–≤—Ç–æ–±—É—Å" },
      { word: "train", transcription: "[—Ç—Ä–µ–π–Ω]", translation: "–ø–æ—Ç—è–≥" },
      { word: "tram", transcription: "[—Ç—Ä–µ–º]", translation: "—Ç—Ä–∞–º–≤–∞–π" },
      { word: "metro", transcription: "[–º–µ—Ç—Ä–æ]", translation: "–º–µ—Ç—Ä–æ" },
      { word: "taxi", transcription: "[—Ç–∞–∫—Å—ñ]", translation: "—Ç–∞–∫—Å—ñ" },
      { word: "ticket", transcription: "[—Ç—ñ–∫–µ—Ç]", translation: "–∫–≤–∏—Ç–æ–∫" },
      { word: "station", transcription: "[—Å—Ç–µ–π—à–Ω]", translation: "—Å—Ç–∞–Ω—Ü—ñ—è" },
      { word: "platform", transcription: "[–ø–ª–∞—Ç—Ñ–æ—Ä–º]", translation: "–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞" },
      { word: "stop", transcription: "[—Å—Ç–æ–ø]", translation: "–∑—É–ø–∏–Ω–∫–∞" },
      { word: "route", transcription: "[—Ä—É—Ç]", translation: "–º–∞—Ä—à—Ä—É—Ç" },
      { word: "driver", transcription: "[–¥—Ä–∞–π–≤–µ—Ä]", translation: "–≤–æ–¥—ñ–π" },
      { word: "passenger", transcription: "[–ø–∞—Å–µ–Ω–¥–∂–µ—Ä]", translation: "–ø–∞—Å–∞–∂–∏—Ä" },
      { word: "departure", transcription: "[–¥—ñ–ø–∞—Ä—á–µ]", translation: "–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è" },
      { word: "arrival", transcription: "[–µ—Ä–∞–π–≤–∞–ª]", translation: "–ø—Ä–∏–±—É—Ç—Ç—è" },
      { word: "schedule", transcription: "[—Å–∫–µ–¥–∂—É–ª]", translation: "—Ä–æ–∑–∫–ª–∞–¥" },
      { word: "fare", transcription: "[—Ñ–µ—Ä]", translation: "–≤–∞—Ä—Ç—ñ—Å—Ç—å –ø—Ä–æ—ó–∑–¥—É" },
      { word: "change", transcription: "[—á–µ–π–Ω–¥–∂]", translation: "–ø–µ—Ä–µ—Å–∞–¥–∫–∞" },
      { word: "seat", transcription: "[—Å—ñ—Ç]", translation: "–º—ñ—Å—Ü–µ" },
      { word: "car", transcription: "[–∫–∞—Ä]", translation: "–∞–≤—Ç–æ–º–æ–±—ñ–ª—å" },
      { word: "bicycle", transcription: "[–±–∞–π—Å–∏–∫–ª]", translation: "–≤–µ–ª–æ—Å–∏–ø–µ–¥" },
      { word: "motorcycle", transcription: "[–º–æ—Ç–æ—Ü–∏–∫–ª]", translation: "–º–æ—Ç–æ—Ü–∏–∫–ª" },
      { word: "parking", transcription: "[–ø–∞—Ä–∫—ñ–Ω–≥]", translation: "–ø–∞—Ä–∫—ñ–Ω–≥" },
      { word: "ticket machine", transcription: "[—Ç—ñ–∫–µ—Ç –º–∞—à—ñ–Ω]", translation: "–∫–≤–∏—Ç–∫–æ–≤–∏–π –∞–≤—Ç–æ–º–∞—Ç" },
      { word: "conductor", transcription: "[–∫–æ–Ω–¥–∞–∫—Ç–æ—Ä]", translation: "–∫–æ–Ω–¥—É–∫—Ç–æ—Ä" }
    ],
    phrases: [
      { phrase: "Where is the bus stop?", translation: "–î–µ –∑—É–ø–∏–Ω–∫–∞ –∞–≤—Ç–æ–±—É—Å–∞?" },
      { phrase: "How much is a ticket?", translation: "–°–∫—ñ–ª—å–∫–∏ –∫–æ—à—Ç—É—î –∫–≤–∏—Ç–æ–∫?" },
      { phrase: "Which platform for train to Kyiv?", translation: "–Ø–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–∞ –ø–æ—Ç—è–≥ –¥–æ –ö–∏—î–≤–∞?" },
      { phrase: "When does the next tram leave?", translation: "–ö–æ–ª–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î—Ç—å—Å—è –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ç—Ä–∞–º–≤–∞–π?" },
      { phrase: "Is this seat taken?", translation: "–¶–µ –º—ñ—Å—Ü–µ –∑–∞–π–Ω—è—Ç–µ?" },
      { phrase: "Can I buy a ticket here?", translation: "–ú–æ–∂–Ω–∞ –∫—É–ø–∏—Ç–∏ –∫–≤–∏—Ç–æ–∫ —Ç—É—Ç?" },
      { phrase: "Where do I change trains?", translation: "–î–µ –ø–µ—Ä–µ—Å–∞–¥–∫–∞ –Ω–∞ —ñ–Ω—à–∏–π –ø–æ—Ç—è–≥?" },
      { phrase: "How long is the journey?", translation: "–°–∫—ñ–ª—å–∫–∏ —Ç—Ä–∏–≤–∞—î –ø–æ—ó–∑–¥–∫–∞?" },
      { phrase: "Does this bus go to the center?", translation: "–¶–µ–π –∞–≤—Ç–æ–±—É—Å —ó–¥–µ –≤ —Ü–µ–Ω—Ç—Ä?" },
      { phrase: "Can you call a taxi for me?", translation: "–ú–æ–∂–µ—Ç–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ç–∞–∫—Å—ñ –¥–ª—è –º–µ–Ω–µ?" },
      { phrase: "Is there a night bus?", translation: "–Ñ –Ω—ñ—á–Ω–∏–π –∞–≤—Ç–æ–±—É—Å?" },
      { phrase: "Where is the ticket office?", translation: "–î–µ –∫–∞—Å–∞?" },
      { phrase: "What time is the last train?", translation: "–û –∫–æ—Ç—Ä—ñ–π –æ—Å—Ç–∞–Ω–Ω—ñ–π –ø–æ—Ç—è–≥?" },
      { phrase: "Do I need to validate my ticket?", translation: "–ü–æ—Ç—Ä—ñ–±–Ω–æ –∫–æ–º–ø–æ—Å—Ç—É–≤–∞—Ç–∏ –∫–≤–∏—Ç–æ–∫?" },
      { phrase: "Is this the right direction?", translation: "–¶–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –Ω–∞–ø—Ä—è–º–æ–∫?" },
      { phrase: "How do I get to the airport?", translation: "–Ø–∫ –¥—ñ—Å—Ç–∞—Ç–∏—Å—è –¥–æ –∞–µ—Ä–æ–ø–æ—Ä—Ç—É?" }
    ]
  },
  shopping: {
    title: "–ü–æ–∫—É–ø–∫–∏",
    icon: "üõçÔ∏è",
    words: [
      { word: "shop", transcription: "[—à–æ–ø]", translation: "–º–∞–≥–∞–∑–∏–Ω" },
      { word: "store", transcription: "[—Å—Ç–æ—Ä]", translation: "–∫—Ä–∞–º–Ω–∏—Ü—è" },
      { word: "mall", transcription: "[–º–æ–ª]", translation: "—Ç–æ—Ä–≥–æ–≤–∏–π —Ü–µ–Ω—Ç—Ä" },
      { word: "market", transcription: "[–º–∞—Ä–∫–µ—Ç]", translation: "—Ä–∏–Ω–æ–∫" },
      { word: "cashier", transcription: "[–∫–µ—à—ñ—Ä]", translation: "–∫–∞—Å–∏—Ä–∞" },
      { word: "price", transcription: "[–ø—Ä–∞–π—Å]", translation: "—Ü—ñ–Ω–∞" },
      { word: "discount", transcription: "[–¥—ñ—Å–∫–∞—É–Ω—Ç]", translation: "–∑–Ω–∏–∂–∫–∞" },
      { word: "sale", transcription: "[—Å–µ–π–ª]", translation: "—Ä–æ–∑–ø—Ä–æ–¥–∞–∂" },
      { word: "receipt", transcription: "[—Ä—ñ—Å—ñ—Ç]", translation: "—á–µ–∫" },
      { word: "bag", transcription: "[–±–µ–≥]", translation: "–ø–∞–∫–µ—Ç" },
      { word: "gift", transcription: "[–≥—ñ—Ñ—Ç]", translation: "–ø–æ–¥–∞—Ä—É–Ω–æ–∫" },
      { word: "souvenir", transcription: "[—Å—É–≤–µ–Ω—ñ—Ä]", translation: "—Å—É–≤–µ–Ω—ñ—Ä" },
      { word: "credit card", transcription: "[–∫—Ä–µ–¥–∏—Ç –∫–∞—Ä–¥]", translation: "–∫—Ä–µ–¥–∏—Ç–Ω–∞ –∫–∞—Ä—Ç–∫–∞" },
      { word: "cash", transcription: "[–∫–µ—à]", translation: "–≥–æ—Ç—ñ–≤–∫–∞" },
      { word: "change", transcription: "[—á–µ–π–Ω–¥–∂]", translation: "—Ä–µ—à—Ç–∞" },
      { word: "fitting room", transcription: "[—Ñ—ñ—Ç—ñ–Ω–≥ —Ä—É–º]", translation: "–ø—Ä–∏–º—ñ—Ä–æ—á–Ω–∞" },
      { word: "size", transcription: "[—Å–∞–π–∑]", translation: "—Ä–æ–∑–º—ñ—Ä" },
      { word: "brand", transcription: "[–±—Ä–µ–Ω–¥]", translation: "–±—Ä–µ–Ω–¥" },
      { word: "product", transcription: "[–ø—Ä–æ–¥–∞–∫—Ç]", translation: "—Ç–æ–≤–∞—Ä" },
      { word: "customer", transcription: "[–∫–∞—Å—Ç–æ–º–µ—Ä]", translation: "–ø–æ–∫—É–ø–µ—Ü—å" },
      { word: "queue", transcription: "[–∫'—é]", translation: "—á–µ—Ä–≥–∞" },
      { word: "open", transcription: "[–æ—É–ø–µ–Ω]", translation: "–≤—ñ–¥–∫—Ä–∏—Ç–æ" },
      { word: "closed", transcription: "[–∫–ª–æ—É–∑–¥]", translation: "–∑–∞—á–∏–Ω–µ–Ω–æ" },
      { word: "warranty", transcription: "[–≤–æ—Ä–∞–Ω—Ç—ñ]", translation: "–≥–∞—Ä–∞–Ω—Ç—ñ—è" },
      { word: "exchange", transcription: "[—ñ–∫—Å—á–µ–π–Ω–¥–∂]", translation: "–æ–±–º—ñ–Ω" }
    ],
    phrases: [
      { phrase: "How much does this cost?", translation: "–°–∫—ñ–ª—å–∫–∏ —Ü–µ –∫–æ—à—Ç—É—î?" },
      { phrase: "Do you have this in another size?", translation: "–£ –≤–∞—Å —î —Ü–µ –≤ —ñ–Ω—à–æ–º—É —Ä–æ–∑–º—ñ—Ä—ñ?" },
      { phrase: "Can I try this on?", translation: "–ú–æ–∂–Ω–∞ –ø—Ä–∏–º—ñ—Ä—è—Ç–∏ —Ü–µ?" },
      { phrase: "Is there a discount?", translation: "–Ñ –∑–Ω–∏–∂–∫–∞?" },
      { phrase: "Can I pay by card?", translation: "–ú–æ–∂–Ω–∞ –æ–ø–ª–∞—Ç–∏—Ç–∏ –∫–∞—Ä—Ç–∫–æ—é?" },
      { phrase: "Where is the fitting room?", translation: "–î–µ –ø—Ä–∏–º—ñ—Ä–æ—á–Ω–∞?" },
      { phrase: "Can I have a bag?", translation: "–ú–æ–∂–Ω–∞ –ø–∞–∫–µ—Ç?" },
      { phrase: "Do you have a gift wrap?", translation: "–Ñ –ø–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∞ —É–ø–∞–∫–æ–≤–∫–∞?" },
      { phrase: "Can I return this?", translation: "–ú–æ–∂–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ü–µ?" },
      { phrase: "Is this on sale?", translation: "–¶–µ –∑—ñ –∑–Ω–∏–∂–∫–æ—é?" },
      { phrase: "Where is the cashier?", translation: "–î–µ –∫–∞—Å–∞?" },
      { phrase: "Can I get a receipt?", translation: "–ú–æ–∂–Ω–∞ —á–µ–∫?" },
      { phrase: "What are your opening hours?", translation: "–Ø–∫–∏–π —É –≤–∞—Å –≥—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏?" },
      { phrase: "Do you have this in another color?", translation: "–Ñ —Ü–µ –≤ —ñ–Ω—à–æ–º—É –∫–æ–ª—å–æ—Ä—ñ?" },
      { phrase: "Can I exchange this?", translation: "–ú–æ–∂–Ω–∞ –æ–±–º—ñ–Ω—è—Ç–∏ —Ü–µ?" },
      { phrase: "Is there a warranty?", translation: "–Ñ –≥–∞—Ä–∞–Ω—Ç—ñ—è?" },
      { phrase: "Where can I find souvenirs?", translation: "–î–µ –º–æ–∂–Ω–∞ –∑–Ω–∞–π—Ç–∏ —Å—É–≤–µ–Ω—ñ—Ä–∏?" },
      { phrase: "Can I pay in cash?", translation: "–ú–æ–∂–Ω–∞ –æ–ø–ª–∞—Ç–∏—Ç–∏ –≥–æ—Ç—ñ–≤–∫–æ—é?" },
      { phrase: "Is there a queue?", translation: "–Ñ —á–µ—Ä–≥–∞?" },
      { phrase: "Is this shop open?", translation: "–¶–µ–π –º–∞–≥–∞–∑–∏–Ω –≤—ñ–¥–∫—Ä–∏—Ç–∏–π?" },
      { phrase: "Do you have a loyalty card?", translation: "–£ –≤–∞—Å —î –∫–∞—Ä—Ç–∫–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ?" },
      { phrase: "Can I get a refund?", translation: "–ú–æ–∂–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –≥—Ä–æ—à—ñ?" }
    ]
  },
  directions: {
    title: "–û—Ä—ñ—î–Ω—Ç—É–≤–∞–Ω–Ω—è",
    icon: "üó∫Ô∏è",
    words: [
      { word: "map", transcription: "[–º–µ–ø]", translation: "–∫–∞—Ä—Ç–∞" },
      { word: "street", transcription: "[—Å—Ç—Ä—ñ—Ç]", translation: "–≤—É–ª–∏—Ü—è" },
      { word: "avenue", transcription: "[–µ–≤–µ–Ω—é]", translation: "–ø—Ä–æ—Å–ø–µ–∫—Ç" },
      { word: "square", transcription: "[—Å–∫–≤–µ—Ä]", translation: "–ø–ª–æ—â–∞" },
      { word: "corner", transcription: "[–∫–æ—Ä–Ω–µ—Ä]", translation: "–∫—É—Ç" },
      { word: "intersection", transcription: "[—ñ–Ω—Ç–µ—Ä—Å–µ–∫—à–Ω]", translation: "–ø–µ—Ä–µ—Ö—Ä–µ—Å—Ç—è" },
      { word: "crosswalk", transcription: "[–∫—Ä–æ—Å–≤–æ–∫]", translation: "–ø—ñ—à–æ—Ö—ñ–¥–Ω–∏–π –ø–µ—Ä–µ—Ö—ñ–¥" },
      { word: "traffic light", transcription: "[—Ç—Ä–∞—Ñ—ñ–∫ –ª–∞–π—Ç]", translation: "—Å–≤—ñ—Ç–ª–æ—Ñ–æ—Ä" },
      { word: "sign", transcription: "[—Å–∞–π–Ω]", translation: "–∑–Ω–∞–∫" },
      { word: "direction", transcription: "[–¥–∞–π—Ä–µ–∫—à–Ω]", translation: "–Ω–∞–ø—Ä—è–º–æ–∫" },
      { word: "left", transcription: "[–ª–µ—Ñ—Ç]", translation: "–ª—ñ–≤–æ—Ä—É—á" },
      { word: "right", transcription: "[—Ä–∞–π—Ç]", translation: "–ø—Ä–∞–≤–æ—Ä—É—á" },
      { word: "straight", transcription: "[—Å—Ç—Ä–µ–π—Ç]", translation: "–ø—Ä—è–º–æ" },
      { word: "behind", transcription: "[–±—ñ—Ö–∞–π–Ω–¥]", translation: "–ø–æ–∑–∞–¥—É" },
      { word: "in front of", transcription: "[—ñ–Ω —Ñ—Ä–æ–Ω—Ç –æ–≤]", translation: "–ø–æ–ø–µ—Ä–µ–¥—É" },
      { word: "near", transcription: "[–Ω—ñ–∞]", translation: "–ø–æ—Ä—É—á" },
      { word: "far", transcription: "[—Ñ–∞—Ä]", translation: "–¥–∞–ª–µ–∫–æ" },
      { word: "opposite", transcription: "[–æ–ø–æ–∑–∏—Ç]", translation: "–Ω–∞–≤–ø—Ä–æ—Ç–∏" },
      { word: "next to", transcription: "[–Ω–µ–∫—Å—Ç —Ç—É]", translation: "–ø–æ—Ä—É—á –∑" },
      { word: "between", transcription: "[–±—ñ—Ç–≤—ñ–Ω]", translation: "–º—ñ–∂" }
    ],
    phrases: [
      { phrase: "How do I get to the city center?", translation: "–Ø–∫ –¥—ñ—Å—Ç–∞—Ç–∏—Å—è –¥–æ —Ü–µ–Ω—Ç—Ä—É –º—ñ—Å—Ç–∞?" },
      { phrase: "Where is the nearest metro station?", translation: "–î–µ –Ω–∞–π–±–ª–∏–∂—á–∞ —Å—Ç–∞–Ω—Ü—ñ—è –º–µ—Ç—Ä–æ?" },
      { phrase: "Is it far from here?", translation: "–¶–µ –¥–∞–ª–µ–∫–æ –∑–≤—ñ–¥—Å–∏?" },
      { phrase: "Can you show me on the map?", translation: "–ú–æ–∂–µ—Ç–µ –ø–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç—ñ?" },
      { phrase: "Go straight ahead", translation: "–Ü–¥—ñ—Ç—å –ø—Ä—è–º–æ" },
      { phrase: "Turn left at the corner", translation: "–ü–æ–≤–µ—Ä–Ω—ñ—Ç—å –ª—ñ–≤–æ—Ä—É—á –Ω–∞ —Ä–æ–∑—ñ" },
      { phrase: "Turn right at the traffic light", translation: "–ü–æ–≤–µ—Ä–Ω—ñ—Ç—å –ø—Ä–∞–≤–æ—Ä—É—á –Ω–∞ —Å–≤—ñ—Ç–ª–æ—Ñ–æ—Ä—ñ" },
      { phrase: "It's next to the bank", translation: "–¶–µ –ø–æ—Ä—É—á –∑ –±–∞–Ω–∫–æ–º" },
      { phrase: "It's opposite the park", translation: "–¶–µ –Ω–∞–≤–ø—Ä–æ—Ç–∏ –ø–∞—Ä–∫—É" },
      { phrase: "Is this the right way?", translation: "–¶–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —à–ª—è—Ö?" },
      { phrase: "How long does it take to walk there?", translation: "–°–∫—ñ–ª—å–∫–∏ –π—Ç–∏ –ø—ñ—à–∫–∏?" },
      { phrase: "Where is the crosswalk?", translation: "–î–µ –ø—ñ—à–æ—Ö—ñ–¥–Ω–∏–π –ø–µ—Ä–µ—Ö—ñ–¥?" },
      { phrase: "Is it near here?", translation: "–¶–µ –ø–æ—Ä—É—á?" },
      { phrase: "Which bus goes to the station?", translation: "–Ø–∫–∏–π –∞–≤—Ç–æ–±—É—Å —ó–¥–µ –¥–æ —Å—Ç–∞–Ω—Ü—ñ—ó?" },
      { phrase: "Can you write down the address?", translation: "–ú–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç–∏ –∞–¥—Ä–µ—Å—É?" },
      { phrase: "Is there a shortcut?", translation: "–Ñ –∫–æ—Ä–æ—Ç—à–∏–π —à–ª—è—Ö?" },
      { phrase: "Where am I on this map?", translation: "–î–µ —è –Ω–∞ —Ü—ñ–π –∫–∞—Ä—Ç—ñ?" },
      { phrase: "How do I get to the museum?", translation: "–Ø–∫ –¥—ñ—Å—Ç–∞—Ç–∏—Å—è –¥–æ –º—É–∑–µ—é?" }
    ]
  },
  medical: {
    title: "–ú–µ–¥–∏—á–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞",
    icon: "üè•",
    words: [
      { word: "doctor", transcription: "[–¥–æ–∫—Ç–æ—Ä]", translation: "–ª—ñ–∫–∞—Ä" },
      { word: "pharmacy", transcription: "[—Ñ–∞—Ä–º–∞—Å—ñ]", translation: "–∞–ø—Ç–µ–∫–∞" },
      { word: "medicine", transcription: "[–º–µ–¥—ñ—Å—ñ–Ω]", translation: "–ª—ñ–∫–∏" },
      { word: "prescription", transcription: "[–ø—Ä—ñ—Å–∫—Ä—ñ–ø—à–Ω]", translation: "—Ä–µ—Ü–µ–ø—Ç" },
      { word: "pain", transcription: "[–ø–µ–π–Ω]", translation: "–±—ñ–ª—å" },
      { word: "headache", transcription: "[—Ö–µ–¥–µ–π–∫]", translation: "–≥–æ–ª–æ–≤–Ω–∏–π –±—ñ–ª—å" },
      { word: "fever", transcription: "[—Ñ—ñ–≤–µ—Ä]", translation: "–∂–∞—Ä" },
      { word: "cough", transcription: "[–∫–æ—Ñ]", translation: "–∫–∞—à–µ–ª—å" },
      { word: "cold", transcription: "[–∫–æ–ª–¥]", translation: "–∑–∞—Å—Ç—É–¥–∞" },
      { word: "allergy", transcription: "[–∞–ª–µ—Ä–¥–∂—ñ]", translation: "–∞–ª–µ—Ä–≥—ñ—è" },
      { word: "injury", transcription: "[—ñ–Ω–¥–∂–µ—Ä—ñ]", translation: "—Ç—Ä–∞–≤–º–∞" },
      { word: "ambulance", transcription: "[–µ–º–±—é–ª–µ–Ω—Å]", translation: "—à–≤–∏–¥–∫–∞ –¥–æ–ø–æ–º–æ–≥–∞" },
      { word: "hospital", transcription: "[—Ö–æ—Å–ø—ñ—Ç–∞–ª]", translation: "–ª—ñ–∫–∞—Ä–Ω—è" },
      { word: "clinic", transcription: "[–∫–ª—ñ–Ω—ñ–∫]", translation: "–∫–ª—ñ–Ω—ñ–∫–∞" },
      { word: "insurance", transcription: "[—ñ–Ω—à—É—Ä–µ–Ω—Å]", translation: "—Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è" },
      { word: "appointment", transcription: "[–µ–ø–æ–π–Ω—Ç–º–µ–Ω—Ç]", translation: "–∑–∞–ø–∏—Å –Ω–∞ –ø—Ä–∏–π–æ–º" },
      { word: "emergency", transcription: "[–µ–º–µ—Ä–¥–∂–µ–Ω—Å—ñ]", translation: "–Ω–∞–¥–∑–≤–∏—á–∞–π–Ω–∞ —Å–∏—Ç—É–∞—Ü—ñ—è" },
      { word: "bandage", transcription: "[–±–µ–Ω–¥—ñ–¥–∂]", translation: "–±–∏–Ω—Ç" }
    ],
    phrases: [
      { phrase: "I need a doctor", translation: "–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–µ–Ω –ª—ñ–∫–∞—Ä" },
      { phrase: "Where is the nearest pharmacy?", translation: "–î–µ –Ω–∞–π–±–ª–∏–∂—á–∞ –∞–ø—Ç–µ–∫–∞?" },
      { phrase: "I have a headache", translation: "–£ –º–µ–Ω–µ –±–æ–ª–∏—Ç—å –≥–æ–ª–æ–≤–∞" },
      { phrase: "Do you have something for a cold?", translation: "–£ –≤–∞—Å —î —â–æ—Å—å –≤—ñ–¥ –∑–∞—Å—Ç—É–¥–∏?" },
      { phrase: "I am allergic to penicillin", translation: "–£ –º–µ–Ω–µ –∞–ª–µ—Ä–≥—ñ—è –Ω–∞ –ø–µ–Ω—ñ—Ü–∏–ª—ñ–Ω" },
      { phrase: "Can I get this medicine without a prescription?", translation: "–ú–æ–∂–Ω–∞ —Ü—ñ –ª—ñ–∫–∏ –±–µ–∑ —Ä–µ—Ü–µ–ø—Ç–∞?" },
      { phrase: "I need an ambulance", translation: "–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ —à–≤–∏–¥–∫–∞ –¥–æ–ø–æ–º–æ–≥–∞" },
      { phrase: "Where is the hospital?", translation: "–î–µ –ª—ñ–∫–∞—Ä–Ω—è?" },
      { phrase: "I have travel insurance", translation: "–£ –º–µ–Ω–µ —î —Ç—É—Ä–∏—Å—Ç–∏—á–Ω–∞ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞" },
      { phrase: "I have an appointment", translation: "–£ –º–µ–Ω–µ –∑–∞–ø–∏—Å –Ω–∞ –ø—Ä–∏–π–æ–º" },
      { phrase: "Is there a clinic nearby?", translation: "–Ñ –∫–ª—ñ–Ω—ñ–∫–∞ –ø–æ—Ä—É—á?" },
      { phrase: "Can you help me?", translation: "–í–∏ –º–æ–∂–µ—Ç–µ –º–µ–Ω—ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏?" }
    ]
  },
  entertainment: {
    title: "–†–æ–∑–≤–∞–≥–∏",
    icon: "üé≠",
    words: [
      { word: "entertainment", transcription: "[–µ–Ω—Ç–µ—Ä—Ç–µ–π–Ω–º–µ–Ω—Ç]", translation: "—Ä–æ–∑–≤–∞–≥–∏" },
      { word: "excursion", transcription: "[–µ–∫—Å–∫—å–æ—Ä—à–Ω]", translation: "–µ–∫—Å–∫—É—Ä—Å—ñ—è" },
      { word: "tour", transcription: "[—Ç—É—Ä]", translation: "—Ç—É—Ä" },
      { word: "museum", transcription: "[–º'—é–∑—ñ—É–º]", translation: "–º—É–∑–µ–π" },
      { word: "theater", transcription: "[—Å—ñ–µ—Ç–µ—Ä]", translation: "—Ç–µ–∞—Ç—Ä" },
      { word: "cinema", transcription: "[—Å—ñ–Ω–µ–º–∞]", translation: "–∫—ñ–Ω–æ—Ç–µ–∞—Ç—Ä" },
      { word: "concert", transcription: "[–∫–æ–Ω—Å–µ—Ä—Ç]", translation: "–∫–æ–Ω—Ü–µ—Ä—Ç" },
      { word: "festival", transcription: "[—Ñ–µ—Å—Ç–∏–≤–∞–ª]", translation: "—Ñ–µ—Å—Ç–∏–≤–∞–ª—å" },
      { word: "event", transcription: "[—ñ–≤–µ–Ω—Ç]", translation: "–ø–æ–¥—ñ—è" },
      { word: "ticket", transcription: "[—Ç—ñ–∫–µ—Ç]", translation: "–∫–≤–∏—Ç–æ–∫" },
      { word: "performance", transcription: "[–ø–µ—Ä—Ñ–æ—Ä–º–µ–Ω—Å]", translation: "–≤–∏—Å—Ç–∞–≤–∞" },
      { word: "gallery", transcription: "[–≥–µ–ª–µ—Ä—ñ]", translation: "–≥–∞–ª–µ—Ä–µ—è" },
      { word: "exhibition", transcription: "[–µ–∫–∑–∏–±—ñ—à–Ω]", translation: "–≤–∏—Å—Ç–∞–≤–∫–∞" },
      { word: "guide", transcription: "[–≥–∞–π–¥]", translation: "–≥—ñ–¥" },
      { word: "souvenir", transcription: "[—Å—É–≤–µ–Ω—ñ—Ä]", translation: "—Å—É–≤–µ–Ω—ñ—Ä" },
      { word: "photo", transcription: "[—Ñ–æ—Ç–æ]", translation: "—Ñ–æ—Ç–æ" },
      { word: "show", transcription: "[—à–æ—É]", translation: "—à–æ—É" },
      { word: "amusement park", transcription: "[–∞–º'—é–∑–º–µ–Ω—Ç –ø–∞—Ä–∫]", translation: "–ø–∞—Ä–∫ —Ä–æ–∑–≤–∞–≥" },
      { word: "zoo", transcription: "[–∑—É]", translation: "–∑–æ–æ–ø–∞—Ä–∫" },
      { word: "aquarium", transcription: "[–∞–∫–≤–∞—Ä—ñ—É–º]", translation: "–∞–∫–≤–∞—Ä—ñ—É–º" },
      { word: "boat trip", transcription: "[–±–æ—É—Ç —Ç—Ä—ñ–ø]", translation: "–ø—Ä–æ–≥—É–ª—è–Ω–∫–∞ –Ω–∞ —á–æ–≤–Ω—ñ" },
      { word: "sightseeing", transcription: "[—Å–∞–π—Ç—Å—ñ—ó–Ω–≥]", translation: "–æ–≥–ª—è–¥ –≤–∏–∑–Ω–∞—á–Ω–∏—Ö –º—ñ—Å—Ü—å" }
    ],
    phrases: [
      { phrase: "What events are happening today?", translation: "–Ø–∫—ñ –ø–æ–¥—ñ—ó —Å—å–æ–≥–æ–¥–Ω—ñ –≤—ñ–¥–±—É–≤–∞—é—Ç—å—Å—è?" },
      { phrase: "Where can I buy tickets?", translation: "–î–µ –º–æ–∂–Ω–∞ –∫—É–ø–∏—Ç–∏ –∫–≤–∏—Ç–∫–∏?" },
      { phrase: "Is there a guided tour?", translation: "–Ñ –µ–∫—Å–∫—É—Ä—Å—ñ—è –∑ –≥—ñ–¥–æ–º?" },
      { phrase: "What time does the show start?", translation: "–û –∫–æ—Ç—Ä—ñ–π –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è —à–æ—É?" },
      { phrase: "How much is the entrance fee?", translation: "–°–∫—ñ–ª—å–∫–∏ –∫–æ—à—Ç—É—î –≤—Ö—ñ–¥?" },
      { phrase: "Are photos allowed?", translation: "–ú–æ–∂–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É–≤–∞—Ç–∏?" },
      { phrase: "Where is the museum?", translation: "–î–µ –º—É–∑–µ–π?" },
      { phrase: "Is there a festival this week?", translation: "–Ñ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è?" },
      { phrase: "Can I get a program?", translation: "–ú–æ–∂–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º—É?" },
      { phrase: "How long is the performance?", translation: "–°–∫—ñ–ª—å–∫–∏ —Ç—Ä–∏–≤–∞—î –≤–∏—Å—Ç–∞–≤–∞?" },
      { phrase: "Where is the nearest cinema?", translation: "–î–µ –Ω–∞–π–±–ª–∏–∂—á–∏–π –∫—ñ–Ω–æ—Ç–µ–∞—Ç—Ä?" },
      { phrase: "Is there a discount for students?", translation: "–Ñ –∑–Ω–∏–∂–∫–∞ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤?" },
      { phrase: "What is the best sightseeing tour?", translation: "–Ø–∫–∏–π –Ω–∞–π–∫—Ä–∞—â–∏–π —Ç—É—Ä –ø–æ –º—ñ—Å—Ç—É?" },
      { phrase: "Where can I buy souvenirs?", translation: "–î–µ –º–æ–∂–Ω–∞ –∫—É–ø–∏—Ç–∏ —Å—É–≤–µ–Ω—ñ—Ä–∏?" },
      { phrase: "Is the amusement park open?", translation: "–ü–∞—Ä–∫ —Ä–æ–∑–≤–∞–≥ –≤—ñ–¥–∫—Ä–∏—Ç–∏–π?" },
      { phrase: "Can I join the excursion?", translation: "–ú–æ–∂–Ω–∞ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –µ–∫—Å–∫—É—Ä—Å—ñ—ó?" },
      { phrase: "Where is the entrance?", translation: "–î–µ –≤—Ö—ñ–¥?" },
      { phrase: "What time does it close?", translation: "–û –∫–æ—Ç—Ä—ñ–π –∑–∞—á–∏–Ω—è—î—Ç—å—Å—è?" },
      { phrase: "Is there a boat trip available?", translation: "–Ñ –ø—Ä–æ–≥—É–ª—è–Ω–∫–∞ –Ω–∞ —á–æ–≤–Ω—ñ?" }
    ]
  },
  money: {
    title: "–ë–∞–Ω–∫ —Ç–∞ –≥—Ä–æ—à—ñ",
    icon: "üí≥",
    words: [
      { word: "bank", transcription: "[–±–∞–Ω–∫]", translation: "–±–∞–Ω–∫" },
      { word: "money", transcription: "[–º–∞–Ω—ñ]", translation: "–≥—Ä–æ—à—ñ" },
      { word: "cash", transcription: "[–∫–µ—à]", translation: "–≥–æ—Ç—ñ–≤–∫–∞" },
      { word: "credit card", transcription: "[–∫—Ä–µ–¥–∏—Ç –∫–∞—Ä–¥]", translation: "–∫—Ä–µ–¥–∏—Ç–Ω–∞ –∫–∞—Ä—Ç–∫–∞" },
      { word: "debit card", transcription: "[–¥–µ–±—ñ—Ç –∫–∞—Ä–¥]", translation: "–¥–µ–±–µ—Ç–æ–≤–∞ –∫–∞—Ä—Ç–∫–∞" },
      { word: "ATM", transcription: "[–µ–π —Ç—ñ –µ–º]", translation: "–±–∞–Ω–∫–æ–º–∞—Ç" },
      { word: "exchange", transcription: "[—ñ–∫—Å—á–µ–π–Ω–¥–∂]", translation: "–æ–±–º—ñ–Ω" },
      { word: "currency", transcription: "[–∫–∞—Ä–µ–Ω—Å—ñ]", translation: "–≤–∞–ª—é—Ç–∞" },
      { word: "rate", transcription: "[—Ä–µ–π—Ç]", translation: "–∫—É—Ä—Å" },
      { word: "account", transcription: "[–µ–∫–∞—É–Ω—Ç]", translation: "—Ä–∞—Ö—É–Ω–æ–∫" },
      { word: "transfer", transcription: "[—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä]", translation: "–ø–µ—Ä–µ–∫–∞–∑" },
      { word: "deposit", transcription: "[–¥–µ–ø–æ–∑–∏—Ç]", translation: "–¥–µ–ø–æ–∑–∏—Ç" },
      { word: "withdraw", transcription: "[–≤—ñ–∑–¥—Ä–æ—É]", translation: "–∑–Ω—è—Ç–∏ –≥—Ä–æ—à—ñ" },
      { word: "balance", transcription: "[–±–µ–ª–µ–Ω—Å]", translation: "–±–∞–ª–∞–Ω—Å" },
      { word: "fee", transcription: "[—Ñ—ñ]", translation: "–∫–æ–º—ñ—Å—ñ—è" },
      { word: "safe", transcription: "[—Å–µ–π—Ñ]", translation: "—Å–µ–π—Ñ" }
    ],
    phrases: [
      { phrase: "Where is the nearest ATM?", translation: "–î–µ –Ω–∞–π–±–ª–∏–∂—á–∏–π –±–∞–Ω–∫–æ–º–∞—Ç?" },
      { phrase: "Can I exchange money here?", translation: "–ú–æ–∂–Ω–∞ –æ–±–º—ñ–Ω—è—Ç–∏ –≥—Ä–æ—à—ñ —Ç—É—Ç?" },
      { phrase: "What is the exchange rate?", translation: "–Ø–∫–∏–π –∫—É—Ä—Å –æ–±–º—ñ–Ω—É?" },
      { phrase: "Can I pay by card?", translation: "–ú–æ–∂–Ω–∞ –æ–ø–ª–∞—Ç–∏—Ç–∏ –∫–∞—Ä—Ç–∫–æ—é?" },
      { phrase: "I would like to withdraw cash", translation: "–Ø —Ö–æ—Ç—ñ–≤ –±–∏ –∑–Ω—è—Ç–∏ –≥–æ—Ç—ñ–≤–∫—É" },
      { phrase: "Is there a fee for this transaction?", translation: "–Ñ –∫–æ–º—ñ—Å—ñ—è –∑–∞ —Ü—é –æ–ø–µ—Ä–∞—Ü—ñ—é?" },
      { phrase: "Can I open a bank account?", translation: "–ú–æ–∂–Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏ –±–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π —Ä–∞—Ö—É–Ω–æ–∫?" },
      { phrase: "Where can I transfer money?", translation: "–î–µ –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–∫–∞–∑–∞—Ç–∏ –≥—Ä–æ—à—ñ?" },
      { phrase: "Is my card accepted here?", translation: "–ú–æ—è –∫–∞—Ä—Ç–∫–∞ –ø—Ä–∏–π–º–∞—î—Ç—å—Å—è —Ç—É—Ç?" },
      { phrase: "Can I check my balance?", translation: "–ú–æ–∂–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–∞–ª–∞–Ω—Å?" },
      { phrase: "Where is the bank?", translation: "–î–µ –±–∞–Ω–∫?" },
      { phrase: "Can I get a receipt?", translation: "–ú–æ–∂–Ω–∞ —á–µ–∫?" },
      { phrase: "Is there a safe in the room?", translation: "–£ –Ω–æ–º–µ—Ä—ñ —î —Å–µ–π—Ñ?" },
      { phrase: "Can I deposit money?", translation: "–ú–æ–∂–Ω–∞ –ø–æ–∫–ª–∞—Å—Ç–∏ –≥—Ä–æ—à—ñ –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫?" }
    ]
  },
  communication: {
    title: "–ö–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—è",
    icon: "üì±",
    words: [
      { word: "phone", transcription: "[—Ñ–æ–Ω]", translation: "—Ç–µ–ª–µ—Ñ–æ–Ω" },
      { word: "call", transcription: "[–∫–æ–ª]", translation: "–¥–∑–≤—ñ–Ω–æ–∫" },
      { word: "message", transcription: "[–º–µ—Å—ñ–¥–∂]", translation: "–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è" },
      { word: "internet", transcription: "[—ñ–Ω—Ç–µ—Ä–Ω–µ—Ç]", translation: "—ñ–Ω—Ç–µ—Ä–Ω–µ—Ç" },
      { word: "wifi", transcription: "[–≤–∞–π—Ñ–∞–π]", translation: "–≤–∞–π—Ñ–∞–π" },
      { word: "SIM card", transcription: "[—Å—ñ–º –∫–∞—Ä–¥]", translation: "SIM-–∫–∞—Ä—Ç–∫–∞" },
      { word: "number", transcription: "[–Ω–∞–º–±–µ—Ä]", translation: "–Ω–æ–º–µ—Ä" },
      { word: "contact", transcription: "[–∫–æ–Ω—Ç–∞–∫—Ç]", translation: "–∫–æ–Ω—Ç–∞–∫—Ç" },
      { word: "email", transcription: "[—ñ–º–µ–π–ª]", translation: "–µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞" },
      { word: "app", transcription: "[–µ–ø]", translation: "–¥–æ–¥–∞—Ç–æ–∫" },
      { word: "chat", transcription: "[—á–∞—Ç]", translation: "—á–∞—Ç" },
      { word: "video call", transcription: "[–≤—ñ–¥–µ–æ –∫–æ–ª]", translation: "–≤—ñ–¥–µ–æ–¥–∑–≤—ñ–Ω–æ–∫" },
      { word: "roaming", transcription: "[—Ä–æ—É–º—ñ–Ω–≥]", translation: "—Ä–æ—É–º—ñ–Ω–≥" },
      { word: "signal", transcription: "[—Å–∏–≥–Ω–∞–ª]", translation: "—Å–∏–≥–Ω–∞–ª" },
      { word: "charger", transcription: "[—á–∞—Ä–¥–∂–µ—Ä]", translation: "–∑–∞—Ä—è–¥–Ω–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π" },
      { word: "battery", transcription: "[–±–µ—Ç–µ—Ä—ñ]", translation: "–±–∞—Ç–∞—Ä–µ—è" },
      { word: "data", transcription: "[–¥–∞—Ç–∞]", translation: "–¥–∞–Ω—ñ" },
      { word: "password", transcription: "[–ø–∞—Å–≤–æ—Ä–¥]", translation: "–ø–∞—Ä–æ–ª—å" },
      { word: "screen", transcription: "[—Å–∫—Ä—ñ–Ω]", translation: "–µ–∫—Ä–∞–Ω" }
    ],
    phrases: [
      { phrase: "Can I use your phone?", translation: "–ú–æ–∂–Ω–∞ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –≤–∞—à–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º?" },
      { phrase: "What is your phone number?", translation: "–Ø–∫–∏–π —É –≤–∞—Å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É?" },
      { phrase: "Is there free wifi here?", translation: "–¢—É—Ç —î –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –≤–∞–π—Ñ–∞–π?" },
      { phrase: "Can I buy a SIM card?", translation: "–ú–æ–∂–Ω–∞ –∫—É–ø–∏—Ç–∏ SIM-–∫–∞—Ä—Ç–∫—É?" },
      { phrase: "Do you have internet access?", translation: "–£ –≤–∞—Å —î –¥–æ—Å—Ç—É–ø –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É?" },
      { phrase: "Can I charge my phone here?", translation: "–ú–æ–∂–Ω–∞ –∑–∞—Ä—è–¥–∏—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω —Ç—É—Ç?" },
      { phrase: "What is the wifi password?", translation: "–Ø–∫–∏–π –ø–∞—Ä–æ–ª—å –≤—ñ–¥ –≤–∞–π—Ñ–∞—é?" },
      { phrase: "I have no signal", translation: "–£ –º–µ–Ω–µ –Ω–µ–º–∞—î —Å–∏–≥–Ω–∞–ª—É" },
      { phrase: "Can I send a message?", translation: "–ú–æ–∂–Ω–∞ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è?" },
      { phrase: "Is there a public phone?", translation: "–Ñ –≥—Ä–æ–º–∞–¥—Å—å–∫–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω?" },
      { phrase: "Can I make a call?", translation: "–ú–æ–∂–Ω–∞ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–≤–∞—Ç–∏?" },
      { phrase: "Do you use WhatsApp?", translation: "–í–∏ –∫–æ—Ä–∏—Å—Ç—É—î—Ç–µ—Å—å WhatsApp?" },
      { phrase: "Can I connect to the internet?", translation: "–ú–æ–∂–Ω–∞ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É?" },
      { phrase: "Is roaming available?", translation: "–†–æ—É–º—ñ–Ω–≥ –¥–æ—Å—Ç—É–ø–Ω–∏–π?" },
      { phrase: "Can I get your contact?", translation: "–ú–æ–∂–Ω–∞ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç?" }
    ]
  },
  emergency: {
    title: "–ù–∞–¥–∑–≤–∏—á–∞–π–Ω—ñ —Å–∏—Ç—É–∞—Ü—ñ—ó",
    icon: "üö®",
    words: [
      { word: "emergency", transcription: "[–µ–º–µ—Ä–¥–∂–µ–Ω—Å—ñ]", translation: "–Ω–∞–¥–∑–≤–∏—á–∞–π–Ω–∞ —Å–∏—Ç—É–∞—Ü—ñ—è" },
      { word: "help", transcription: "[—Ö–µ–ª–ø]", translation: "–¥–æ–ø–æ–º–æ–≥–∞" },
      { word: "police", transcription: "[–ø–æ–ª—ñ—Å]", translation: "–ø–æ–ª—ñ—Ü—ñ—è" },
      { word: "fire", transcription: "[—Ñ–∞—î—Ä]", translation: "–ø–æ–∂–µ–∂–∞" },
      { word: "ambulance", transcription: "[–µ–º–±—é–ª–µ–Ω—Å]", translation: "—à–≤–∏–¥–∫–∞ –¥–æ–ø–æ–º–æ–≥–∞" },
      { word: "accident", transcription: "[–µ–∫—Å—ñ–¥–µ–Ω—Ç]", translation: "–∞–≤–∞—Ä—ñ—è" },
      { word: "theft", transcription: "[—Ç–µ—Ñ—Ç]", translation: "–∫—Ä–∞–¥—ñ–∂–∫–∞" },
      { word: "lost", transcription: "[–ª–æ—Å—Ç]", translation: "–∑–∞–≥—É–±–ª–µ–Ω–∏–π" },
      { word: "danger", transcription: "[–¥–µ–π–Ω–¥–∂–µ—Ä]", translation: "–Ω–µ–±–µ–∑–ø–µ–∫–∞" },
      { word: "safe", transcription: "[—Å–µ–π—Ñ]", translation: "–±–µ–∑–ø–µ—á–Ω–∏–π" },
      { word: "injury", transcription: "[—ñ–Ω–¥–∂–µ—Ä—ñ]", translation: "—Ç—Ä–∞–≤–º–∞" },
      { word: "firefighter", transcription: "[—Ñ–∞—î—Ä—Ñ–∞–π—Ç–µ—Ä]", translation: "–ø–æ–∂–µ–∂–Ω–∏–∫" },
      { word: "emergency exit", transcription: "[–µ–º–µ—Ä–¥–∂–µ–Ω—Å—ñ –µ–≥–∑–∏—Ç]", translation: "–∞–≤–∞—Ä—ñ–π–Ω–∏–π –≤–∏—Ö—ñ–¥" },
      { word: "first aid", transcription: "[—Ñ–µ—Ä—Å—Ç –µ–π–¥]", translation: "–ø–µ—Ä—à–∞ –¥–æ–ø–æ–º–æ–≥–∞" },
      { word: "insurance", transcription: "[—ñ–Ω—à—É—Ä–µ–Ω—Å]", translation: "—Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è" }
    ],
    phrases: [
      { phrase: "Help! Call the police!", translation: "–î–æ–ø–æ–º–æ–∂—ñ—Ç—å! –í–∏–∫–ª–∏—á—Ç–µ –ø–æ–ª—ñ—Ü—ñ—é!" },
      { phrase: "I need an ambulance", translation: "–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–∞ —à–≤–∏–¥–∫–∞ –¥–æ–ø–æ–º–æ–≥–∞" },
      { phrase: "There is a fire", translation: "–¢—É—Ç –ø–æ–∂–µ–∂–∞" },
      { phrase: "I have lost my passport", translation: "–Ø –∑–∞–≥—É–±–∏–≤ –ø–∞—Å–ø–æ—Ä—Ç" },
      { phrase: "My bag was stolen", translation: "–ú—ñ–π —Ä—é–∫–∑–∞–∫ –≤–∫—Ä–∞–ª–∏" },
      { phrase: "Is everyone safe?", translation: "–í—Å—ñ –≤ –±–µ–∑–ø–µ—Ü—ñ?" },
      { phrase: "Where is the emergency exit?", translation: "–î–µ –∞–≤–∞—Ä—ñ–π–Ω–∏–π –≤–∏—Ö—ñ–¥?" },
      { phrase: "I had an accident", translation: "–Ø –ø–æ—Ç—Ä–∞–ø–∏–≤ —É –∞–≤–∞—Ä—ñ—é" },
      { phrase: "Can you help me?", translation: "–í–∏ –º–æ–∂–µ—Ç–µ –º–µ–Ω—ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏?" },
      { phrase: "What is the emergency number?", translation: "–Ø–∫–∏–π –Ω–æ–º–µ—Ä –µ–∫—Å—Ç—Ä–µ–Ω–æ—ó —Å–ª—É–∂–±–∏?" }
    ]
  },
  weather: {
    title: "–ü–æ–≥–æ–¥–∞ —Ç–∞ —á–∞—Å",
    icon: "üå§Ô∏è",
    words: [
      { word: "weather", transcription: "[–≤–µ–∑–µ—Ä]", translation: "–ø–æ–≥–æ–¥–∞" },
      { word: "sun", transcription: "[—Å–∞–Ω]", translation: "—Å–æ–Ω—Ü–µ" },
      { word: "rain", transcription: "[—Ä–µ–π–Ω]", translation: "–¥–æ—â" },
      { word: "cloud", transcription: "[–∫–ª–∞—É–¥]", translation: "—Ö–º–∞—Ä–∞" },
      { word: "wind", transcription: "[–≤—ñ–Ω–¥]", translation: "–≤—ñ—Ç–µ—Ä" },
      { word: "snow", transcription: "[—Å–Ω–æ—É]", translation: "—Å–Ω—ñ–≥" },
      { word: "storm", transcription: "[—Å—Ç–æ—Ä–º]", translation: "–±—É—Ä—è" },
      { word: "fog", transcription: "[—Ñ–æ–≥]", translation: "—Ç—É–º–∞–Ω" },
      { word: "temperature", transcription: "[—Ç–µ–º–ø–µ—Ä–∞—á–µ]", translation: "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞" },
      { word: "degree", transcription: "[–¥—ñ–≥—Ä—ñ]", translation: "–≥—Ä–∞–¥—É—Å" },
      { word: "hot", transcription: "[—Ö–æ—Ç]", translation: "—Å–ø–µ–∫–æ—Ç–Ω–æ" },
      { word: "cold", transcription: "[–∫–æ–ª–¥]", translation: "—Ö–æ–ª–æ–¥–Ω–æ" },
      { word: "warm", transcription: "[–≤–æ—Ä–º]", translation: "—Ç–µ–ø–ª–æ" },
      { word: "cool", transcription: "[–∫—É–ª]", translation: "–ø—Ä–æ—Ö–æ–ª–æ–¥–Ω–æ" },
      { word: "forecast", transcription: "[—Ñ–æ—Ä–∫–∞—Å—Ç]", translation: "–ø—Ä–æ–≥–Ω–æ–∑" },
      { word: "season", transcription: "[—Å—ñ–∑–æ–Ω]", translation: "—Å–µ–∑–æ–Ω" },
      { word: "spring", transcription: "[—Å–ø—Ä—ñ–Ω–≥]", translation: "–≤–µ—Å–Ω–∞" },
      { word: "summer", transcription: "[—Å–∞–º–µ—Ä]", translation: "–ª—ñ—Ç–æ" },
      { word: "autumn", transcription: "[–æ—Ç—É–º–Ω]", translation: "–æ—Å—ñ–Ω—å" },
      { word: "winter", transcription: "[–≤—ñ–Ω—Ç–µ—Ä]", translation: "–∑–∏–º–∞" },
      { word: "time", transcription: "[—Ç–∞–π–º]", translation: "—á–∞—Å" }
    ],
    phrases: [
      { phrase: "What is the weather like today?", translation: "–Ø–∫–∞ —Å—å–æ–≥–æ–¥–Ω—ñ –ø–æ–≥–æ–¥–∞?" },
      { phrase: "Is it going to rain?", translation: "–ë—É–¥–µ –¥–æ—â?" },
      { phrase: "How hot is it?", translation: "–ù–∞—Å–∫—ñ–ª—å–∫–∏ —Å–ø–µ–∫–æ—Ç–Ω–æ?" },
      { phrase: "What is the temperature?", translation: "–Ø–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞?" },
      { phrase: "Is it cold outside?", translation: "–ù–∞ –≤—É–ª–∏—Ü—ñ —Ö–æ–ª–æ–¥–Ω–æ?" },
      { phrase: "Do I need an umbrella?", translation: "–ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø–∞—Ä–∞—Å–æ–ª—è?" },
      { phrase: "It's sunny today", translation: "–°—å–æ–≥–æ–¥–Ω—ñ —Å–æ–Ω—è—á–Ω–æ" },
      { phrase: "What time is it?", translation: "–ö–æ—Ç—Ä–∞ –≥–æ–¥–∏–Ω–∞?" },
      { phrase: "It's windy outside", translation: "–ù–∞ –≤—É–ª–∏—Ü—ñ –≤—ñ—Ç—Ä—è–Ω–æ" },
      { phrase: "The forecast says rain", translation: "–ü—Ä–æ–≥–Ω–æ–∑ –æ–±—ñ—Ü—è—î –¥–æ—â" },
      { phrase: "Is it below zero?", translation: "–ù–∏–∂—á–µ –Ω—É–ª—è?" },
      { phrase: "What season is it?", translation: "–Ø–∫–∏–π –∑–∞—Ä–∞–∑ —Å–µ–∑–æ–Ω?" },
      { phrase: "It's foggy this morning", translation: "–°—å–æ–≥–æ–¥–Ω—ñ –≤—Ä–∞–Ω—Ü—ñ —Ç—É–º–∞–Ω–Ω–æ" },
      { phrase: "The storm is coming", translation: "–ù–∞–±–ª–∏–∂–∞—î—Ç—å—Å—è –±—É—Ä—è" },
      { phrase: "Do you have the time?", translation: "–í–∏ –Ω–µ —Å–∫–∞–∂–µ—Ç–µ —á–∞—Å?" },
      { phrase: "It feels like summer", translation: "–í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫ –ª—ñ—Ç–æ" },
      { phrase: "The weather is changing", translation: "–ü–æ–≥–æ–¥–∞ –∑–º—ñ–Ω—é—î—Ç—å—Å—è" },
      { phrase: "It's getting warmer", translation: "–°—Ç–∞—î —Ç–µ–ø–ª—ñ—à–∏–º" },
      { phrase: "What's the weather forecast?", translation: "–Ø–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏?" },
      { phrase: "It's snowing heavily", translation: "–ô–¥–µ —Å–∏–ª—å–Ω–∏–π —Å–Ω—ñ–≥" },
      { phrase: "Perfect weather for walking", translation: "–Ü–¥–µ–∞–ª—å–Ω–∞ –ø–æ–≥–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≥—É–ª—è–Ω–∫–∏" }
    ]
  },
  departure: {
    title: "–í—ñ–¥'—ó–∑–¥",
    icon: "üéí",
    words: [
      { word: "departure", transcription: "[–¥—ñ–ø–∞—Ä—á–µ]", translation: "–≤—ñ–¥'—ó–∑–¥" },
      { word: "leaving", transcription: "[–ª—ñ–≤—ñ–Ω–≥]", translation: "–≤—ñ–¥'—ó–∂–¥–∂–∞—é" },
      { word: "checkout", transcription: "[—á–µ–∫–∞—É—Ç]", translation: "–≤–∏—Å–µ–ª–µ–Ω–Ω—è" },
      { word: "luggage", transcription: "[–ª–∞–≥—ñ–¥–∂]", translation: "–±–∞–≥–∞–∂" },
      { word: "suitcase", transcription: "[—Å—É—Ç–∫–µ–π—Å]", translation: "–≤–∞–ª—ñ–∑–∞" },
      { word: "packing", transcription: "[–ø–µ–∫—ñ–Ω–≥]", translation: "–ø–∞–∫—É–≤–∞–Ω–Ω—è" },
      { word: "taxi", transcription: "[—Ç–∞–∫—Å—ñ]", translation: "—Ç–∞–∫—Å—ñ" },
      { word: "airport", transcription: "[–µ–∞–ø–æ—Ä—Ç]", translation: "–∞–µ—Ä–æ–ø–æ—Ä—Ç" },
      { word: "station", transcription: "[—Å—Ç–µ–π—à–Ω]", translation: "—Å—Ç–∞–Ω—Ü—ñ—è" },
      { word: "souvenir", transcription: "[—Å—É–≤–µ–Ω—ñ—Ä]", translation: "—Å—É–≤–µ–Ω—ñ—Ä" },
      { word: "receipt", transcription: "[—Ä—ñ—Å—ñ—Ç]", translation: "—á–µ–∫" },
      { word: "goodbye", transcription: "[–≥—É–¥–±–∞–π]", translation: "–¥–æ –ø–æ–±–∞—á–µ–Ω–Ω—è" },
      { word: "thank you", transcription: "[—Ç–µ–Ω–∫ —é]", translation: "–¥—è–∫—É—é" },
      { word: "return", transcription: "[—Ä—ñ—Ç–µ—Ä–Ω]", translation: "–ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è" },
      { word: "memories", transcription: "[–º–µ–º–æ—Ä—ñ–∑]", translation: "—Å–ø–æ–≥–∞–¥–∏" },
      { word: "journey home", transcription: "[–¥–∂–æ—Ä–Ω—ñ —Ö–æ—É–º]", translation: "–¥–æ—Ä–æ–≥–∞ –¥–æ–¥–æ–º—É" },
      { word: "final", transcription: "[—Ñ–∞–π–Ω–∞–ª]", translation: "–æ—Å—Ç–∞–Ω–Ω—ñ–π" }
    ],
    phrases: [
      { phrase: "I'm checking out today", translation: "–Ø —Å—å–æ–≥–æ–¥–Ω—ñ –≤–∏—Å–µ–ª—è—é—Å—è" },
      { phrase: "Can you call a taxi?", translation: "–ú–æ–∂–µ—Ç–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ç–∞–∫—Å—ñ?" },
      { phrase: "Where can I store my luggage?", translation: "–î–µ –º–æ–∂–Ω–∞ –∑–∞–ª–∏—à–∏—Ç–∏ –±–∞–≥–∞–∂?" },
      { phrase: "Thank you for everything", translation: "–î—è–∫—É—é –∑–∞ –≤—Å–µ" },
      { phrase: "I had a wonderful time", translation: "–Ø —á—É–¥–æ–≤–æ –ø—Ä–æ–≤—ñ–≤ —á–∞—Å" },
      { phrase: "Can I get a receipt?", translation: "–ú–æ–∂–Ω–∞ —á–µ–∫?" },
      { phrase: "How do I get to the airport?", translation: "–Ø–∫ –¥—ñ—Å—Ç–∞—Ç–∏—Å—è –¥–æ –∞–µ—Ä–æ–ø–æ—Ä—Ç—É?" },
      { phrase: "What time should I leave?", translation: "–û –∫–æ—Ç—Ä—ñ–π –º–µ–Ω—ñ –≤–∞—Ä—Ç–æ –ø–æ—ó—Ö–∞—Ç–∏?" },
      { phrase: "Is there a bus to the station?", translation: "–Ñ –∞–≤—Ç–æ–±—É—Å –¥–æ —Å—Ç–∞–Ω—Ü—ñ—ó?" },
      { phrase: "I forgot to pack something", translation: "–Ø –∑–∞–±—É–≤ —â–æ—Å—å –∑–∞–ø–∞–∫—É–≤–∞—Ç–∏" },
      { phrase: "Can I buy souvenirs here?", translation: "–ú–æ–∂–Ω–∞ –∫—É–ø–∏—Ç–∏ —Å—É–≤–µ–Ω—ñ—Ä–∏ —Ç—É—Ç?" },
      { phrase: "I'll definitely come back", translation: "–Ø –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –ø–æ–≤–µ—Ä–Ω—É—Å—è" },
      { phrase: "Goodbye and thank you", translation: "–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è —ñ –¥—è–∫—É—é" }
    ]
  }
}

const vocabularyCategories: Category[] = [
  {
    id: 'planning',
    title: vocabularyData.planning.title,
    emoji: vocabularyData.planning.icon,
    description: '–û—Å–Ω–æ–≤–Ω—ñ —Ñ—Ä–∞–∑–∏ –¥–ª—è –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è –ø–æ—ó–∑–¥–∫–∏',
    position: { top: '3%', left: '30%' },
    completed: false,
    words: vocabularyData.planning.words,
    phrases: vocabularyData.planning.phrases
  },
  {
    id: 'airport',
    title: vocabularyData.airport.title,
    emoji: vocabularyData.airport.icon,
    description: '–§—Ä–∞–∑–∏ –¥–ª—è –∞–µ—Ä–æ–ø–æ—Ä—Ç—É —Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó',
    position: { top: '8%', left: '70%' },
    completed: false,
    words: vocabularyData.airport.words,
    phrases: vocabularyData.airport.phrases
  },
  {
    id: 'hotel',
    title: vocabularyData.hotel.title,
    emoji: vocabularyData.hotel.icon,
    description: '–ü—Ä–æ–∂–∏–≤–∞–Ω–Ω—è —Ç–∞ —Å–µ—Ä–≤—ñ—Å',
    position: { top: '13%', left: '15%' },
    completed: false,
    words: vocabularyData.hotel.words,
    phrases: vocabularyData.hotel.phrases
  },
  {
    id: 'transport',
    title: vocabularyData.transport.title,
    emoji: vocabularyData.transport.icon,
    description: '–ì—Ä–æ–º–∞–¥—Å—å–∫–∏–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
    position: { top: '18%', left: '85%' },
    completed: false,
    words: vocabularyData.transport.words,
    phrases: vocabularyData.transport.phrases
  },
  {
    id: 'restaurant',
    title: vocabularyData.restaurant.title,
    emoji: vocabularyData.restaurant.icon,
    description: '–á–∂–∞ —Ç–∞ –Ω–∞–ø–æ—ó',
    position: { top: '23%', left: '45%' },
    completed: false,
    words: vocabularyData.restaurant.words,
    phrases: vocabularyData.restaurant.phrases
  },
  {
    id: 'shopping',
    title: vocabularyData.shopping.title,
    emoji: vocabularyData.shopping.icon,
    description: '–ü–æ–∫—É–ø–∫–∏ —Ç–∞ –º–∞–≥–∞–∑–∏–Ω–∏',
    position: { top: '28%', left: '10%' },
    completed: false,
    words: vocabularyData.shopping.words,
    phrases: vocabularyData.shopping.phrases
  },
  {
    id: 'directions',
    title: vocabularyData.directions.title,
    emoji: vocabularyData.directions.icon,
    description: '–û—Ä—ñ—î–Ω—Ç—É–≤–∞–Ω–Ω—è –≤ –º—ñ—Å—Ç—ñ',
    position: { top: '33%', left: '75%' },
    completed: false,
    words: vocabularyData.directions.words,
    phrases: vocabularyData.directions.phrases
  },
  {
    id: 'entertainment',
    title: vocabularyData.entertainment.title,
    emoji: vocabularyData.entertainment.icon,
    description: '–†–æ–∑–≤–∞–≥–∏ —Ç–∞ –∫—É–ª—å—Ç—É—Ä–∞',
    position: { top: '38%', left: '25%' },
    completed: false,
    words: vocabularyData.entertainment.words,
    phrases: vocabularyData.entertainment.phrases
  },
  {
    id: 'medical',
    title: vocabularyData.medical.title,
    emoji: vocabularyData.medical.icon,
    description: '–ú–µ–¥–∏—á–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞',
    position: { top: '43%', left: '60%' },
    completed: false,
    words: vocabularyData.medical.words,
    phrases: vocabularyData.medical.phrases
  },
  {
    id: 'money',
    title: vocabularyData.money.title,
    emoji: vocabularyData.money.icon,
    description: '–ë–∞–Ω–∫–∏ —Ç–∞ —Ñ—ñ–Ω–∞–Ω—Å–∏',
    position: { top: '48%', left: '15%' },
    completed: false,
    words: vocabularyData.money.words,
    phrases: vocabularyData.money.phrases
  },
  {
    id: 'communication',
    title: vocabularyData.communication.title,
    emoji: vocabularyData.communication.icon,
    description: '–ó–≤\'—è–∑–æ–∫ —Ç–∞ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç',
    position: { top: '53%', left: '85%' },
    completed: false,
    words: vocabularyData.communication.words,
    phrases: vocabularyData.communication.phrases
  },
  {
    id: 'emergency',
    title: vocabularyData.emergency.title,
    emoji: vocabularyData.emergency.icon,
    description: '–ù–∞–¥–∑–≤–∏—á–∞–π–Ω—ñ —Å–∏—Ç—É–∞—Ü—ñ—ó',
    position: { top: '58%', left: '40%' },
    completed: false,
    words: vocabularyData.emergency.words,
    phrases: vocabularyData.emergency.phrases
  },
  {
    id: 'weather',
    title: vocabularyData.weather.title,
    emoji: vocabularyData.weather.icon,
    description: '–ü–æ–≥–æ–¥–∞ —Ç–∞ —á–∞—Å',
    position: { top: '63%', left: '10%' },
    completed: false,
    words: vocabularyData.weather.words,
    phrases: vocabularyData.weather.phrases
  },
  {
    id: 'departure',
    title: vocabularyData.departure.title,
    emoji: vocabularyData.departure.icon,
    description: '–í—ñ–¥\'—ó–∑–¥ —Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è',
    position: { top: '68%', left: '70%' },
    completed: false,
    words: vocabularyData.departure.words,
    phrases: vocabularyData.departure.phrases
  }
]

// Practice Mode Types
type PracticeMode = 'flashcards' | 'quiz' | 'dragdrop'
type PracticeState = 'selection' | 'active' | 'results'

interface PracticeResults {
  correct: number
  total: number
  timeSpent: number
}

// Vocabulary Modal Component
function VocabularyModal({ category, onClose }: { category: Category; onClose: () => void }) {
  const [activeTab, setActiveTab] = useState<'words' | 'phrases' | 'practice'>('words')
  const [practiceMode, setPracticeMode] = useState<PracticeMode | null>(null)
  const [practiceState, setPracticeState] = useState<PracticeState>('selection')
  const [practiceResults, setPracticeResults] = useState<PracticeResults | null>(null)
  
  // Touch gestures for closing modal
  const [touchStart, setTouchStart] = useState<{ x: number; y: number } | null>(null)
  const [touchEnd, setTouchEnd] = useState<{ x: number; y: number } | null>(null)

  const startPractice = (mode: PracticeMode) => {
    setPracticeMode(mode)
    setPracticeState('active')
  }

  const finishPractice = (results: PracticeResults) => {
    setPracticeResults(results)
    setPracticeState('results')
  }

  const resetPractice = () => {
    setPracticeMode(null)
    setPracticeState('selection')
    setPracticeResults(null)
  }

  // Touch gesture handlers - mobile only
  const handleTouchStart = (e: React.TouchEvent) => {
    // Only handle touch on mobile devices
    if (window.innerWidth >= 640) return
    
    setTouchEnd(null)
    setTouchStart({
      x: e.targetTouches[0].clientX,
      y: e.targetTouches[0].clientY
    })
  }

  const handleTouchMove = (e: React.TouchEvent) => {
    // Only handle touch on mobile devices
    if (window.innerWidth >= 640) return
    
    setTouchEnd({
      x: e.targetTouches[0].clientX,
      y: e.targetTouches[0].clientY
    })
  }

  const handleTouchEnd = () => {
    // Only handle touch on mobile devices
    if (window.innerWidth >= 640) return
    if (!touchStart || !touchEnd) return
    
    const distanceX = touchStart.x - touchEnd.x
    const distanceY = touchStart.y - touchEnd.y
    const isDownSwipe = distanceY < -100
    
    // Close modal on swipe down (mobile gesture)
    if (isDownSwipe && Math.abs(distanceY) > Math.abs(distanceX)) {
      onClose()
    }
  }

  // Flashcards Component - Optimized for performance
  const FlashcardsComponent = () => {
    const [currentIndex, setCurrentIndex] = useState(0)
    const [isFlipped, setIsFlipped] = useState(false)
    const [showWords, setShowWords] = useState(true)
    const [startTime] = useState(Date.now())
    const [completedCards, setCompletedCards] = useState(0)

    const items = useMemo(() => showWords ? category.words : category.phrases, [showWords, category.words, category.phrases])
    const currentItem = useMemo(() => items[currentIndex], [items, currentIndex])

    const nextCard = useCallback(() => {
      if (currentIndex < items.length - 1) {
        setCurrentIndex(prev => prev + 1)
        setIsFlipped(false)
        setCompletedCards(prev => prev + 1)
      } else {
        // Finished all cards
        finishPractice({
          correct: completedCards + 1,
          total: items.length,
          timeSpent: Math.round((Date.now() - startTime) / 1000)
        })
      }
    }, [currentIndex, items.length, completedCards, startTime, finishPractice])

    const prevCard = useCallback(() => {
      if (currentIndex > 0) {
        setCurrentIndex(prev => prev - 1)
        setIsFlipped(false)
      }
    }, [currentIndex])

    return (
      <div className="space-y-4 sm:space-y-6">
        {/* Header - Mobile optimized */}
        <div className="flex items-center justify-between gap-2">
          <button
            onClick={resetPractice}
            className="flex items-center gap-1 sm:gap-2 px-4 py-2.5 sm:px-4 sm:py-2 bg-gray-700 hover:bg-gray-600 rounded-lg text-white transition-colors duration-200 text-sm sm:text-base touch-manipulation"
          >
            ‚Üê <span className="hidden sm:inline">–ù–∞–∑–∞–¥</span>
          </button>
          <div className="flex gap-1 sm:gap-2">
            <button
              onClick={() => setShowWords(true)}
              className={`px-3 py-2 sm:px-3 sm:py-1 rounded-lg text-sm sm:text-sm transition-colors duration-200 touch-manipulation ${
                showWords ? 'bg-blue-500 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
              }`}
            >
              –°–ª–æ–≤–∞
            </button>
            <button
              onClick={() => setShowWords(false)}
              className={`px-3 py-2 sm:px-3 sm:py-1 rounded-lg text-sm sm:text-sm transition-colors duration-200 touch-manipulation ${
                !showWords ? 'bg-blue-500 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
              }`}
            >
              –§—Ä–∞–∑–∏
            </button>
          </div>
        </div>

        {/* Progress - Mobile optimized */}
        <div className="text-center">
          <div className="text-gray-300 mb-2 text-sm sm:text-base">
            {currentIndex + 1} –∑ {items.length}
          </div>
          <div className="w-full h-2 bg-gray-700 rounded-full overflow-hidden">
            <div 
              className="h-full bg-gradient-to-r from-blue-500 to-cyan-500 transition-all duration-300"
              style={{ width: `${((currentIndex + 1) / items.length) * 100}%` }}
            />
          </div>
        </div>

        {/* Flashcard - Mobile optimized */}
        <div className="flex justify-center px-2 sm:px-0">
          <div 
            className="relative w-full max-w-sm sm:max-w-md h-56 sm:h-64 cursor-pointer"
            onClick={() => setIsFlipped(!isFlipped)}
            style={{ perspective: '1000px' }}
          >
            {/* Front of card */}
            <div className={`absolute inset-0 bg-gradient-to-br from-blue-600 to-cyan-600 rounded-xl p-4 sm:p-6 transition-transform duration-500 backface-hidden ${
              isFlipped ? 'rotate-y-180' : 'rotate-y-0'
            }`}>
              <div className="h-full flex flex-col justify-center items-center text-center">
                <div className="text-white text-lg sm:text-2xl md:text-3xl font-bold mb-2 sm:mb-4 px-2">
                  {showWords ? (currentItem as VocabularyWord).word : (currentItem as VocabularyPhrase).phrase}
                </div>
                {showWords && (
                  <div className="text-cyan-200 text-base sm:text-lg">
                    {(currentItem as VocabularyWord).transcription}
                  </div>
                )}
                <div className="mt-3 sm:mt-4 text-cyan-200 text-xs sm:text-sm px-2">
                  –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –ø–µ—Ä–µ–∫–ª–∞–¥
                </div>
              </div>
            </div>

            {/* Back of card */}
            <div className={`absolute inset-0 bg-gradient-to-br from-green-600 to-emerald-600 rounded-xl p-4 sm:p-6 transition-transform duration-500 backface-hidden ${
              isFlipped ? 'rotate-y-0' : 'rotate-y-180'
            }`}>
              <div className="h-full flex flex-col justify-center items-center text-center">
                <div className="text-white text-lg sm:text-2xl md:text-3xl font-bold mb-2 sm:mb-4 px-2">
                  {showWords ? (currentItem as VocabularyWord).translation : (currentItem as VocabularyPhrase).translation}
                </div>
                <div className="mt-3 sm:mt-4 text-emerald-200 text-xs sm:text-sm px-2">
                  –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å, —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Controls - Mobile optimized */}
        <div className="flex justify-center gap-3 sm:gap-4 px-2 sm:px-0">
          <button
            onClick={prevCard}
            disabled={currentIndex === 0}
            className="px-6 py-3 sm:px-6 sm:py-2 bg-gray-700 hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed rounded-lg text-white transition-colors duration-200 text-sm sm:text-base touch-manipulation min-w-[100px] sm:min-w-0"
          >
            <span className="sm:hidden">‚Üê</span>
            <span className="hidden sm:inline">–ü–æ–ø–µ—Ä–µ–¥–Ω—è</span>
          </button>
          <button
            onClick={nextCard}
            className="px-6 py-3 sm:px-6 sm:py-2 bg-blue-600 hover:bg-blue-700 rounded-lg text-white transition-colors duration-200 text-sm sm:text-base touch-manipulation min-w-[100px] sm:min-w-0"
          >
            {currentIndex === items.length - 1 ? (
              <>
                <span className="sm:hidden">‚úì</span>
                <span className="hidden sm:inline">–ó–∞–≤–µ—Ä—à–∏—Ç–∏</span>
              </>
            ) : (
              <>
                <span className="sm:hidden">‚Üí</span>
                <span className="hidden sm:inline">–ù–∞—Å—Ç—É–ø–Ω–∞</span>
              </>
            )}
          </button>
        </div>
      </div>
    )
  }

  // Quiz Component - Optimized for performance
  const QuizComponent = () => {
    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)
    const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null)
    const [showResult, setShowResult] = useState(false)
    const [correctAnswers, setCorrectAnswers] = useState(0)
    const [showWords, setShowWords] = useState(true)
    const [startTime] = useState(Date.now())
    const [options, setOptions] = useState<string[]>([])
    const [randomizedIndexes, setRandomizedIndexes] = useState(() => {
      // Create randomized array of indexes for questions
      const items = showWords ? category.words : category.phrases
      return Array.from({ length: items.length }, (_, i) => i).sort(() => Math.random() - 0.5)
    })

    const items = useMemo(() => showWords ? category.words : category.phrases, [showWords, category.words, category.phrases])
    const currentIndex = useMemo(() => randomizedIndexes[currentQuestionIndex], [randomizedIndexes, currentQuestionIndex])
    const currentItem = useMemo(() => items[currentIndex], [items, currentIndex])

    // Generate wrong answers - memoized for performance
    const generateOptions = useCallback(() => {
      const correctAnswer = showWords ? 
        (currentItem as VocabularyWord).translation : 
        (currentItem as VocabularyPhrase).translation

      const otherItems = items.filter((_, index) => index !== currentIndex)
      const wrongAnswers = otherItems
        .map(item => showWords ? (item as VocabularyWord).translation : (item as VocabularyPhrase).translation)
        .sort(() => Math.random() - 0.5)
        .slice(0, 3)

      const allOptions = [correctAnswer, ...wrongAnswers].sort(() => Math.random() - 0.5)
      return allOptions
    }, [showWords, currentItem, items, currentIndex])

    // Update options when currentQuestionIndex or showWords changes
    useEffect(() => {
      setOptions(generateOptions())
      setSelectedAnswer(null)
      setShowResult(false)
    }, [currentQuestionIndex, showWords])

    // Reset quiz when changing between words/phrases
    useEffect(() => {
      const items = showWords ? category.words : category.phrases
      setRandomizedIndexes(Array.from({ length: items.length }, (_, i) => i).sort(() => Math.random() - 0.5))
      setCurrentQuestionIndex(0)
      setCorrectAnswers(0)
      setSelectedAnswer(null)
      setShowResult(false)
    }, [showWords])

    const handleAnswer = useCallback((answer: string) => {
      const correctAnswer = showWords ? 
        (currentItem as VocabularyWord).translation : 
        (currentItem as VocabularyPhrase).translation

      setSelectedAnswer(answer)
      setShowResult(true)

      if (answer === correctAnswer) {
        setCorrectAnswers(prev => prev + 1)
      }
    }, [showWords, currentItem])

    const nextQuestion = useCallback(() => {
      if (currentQuestionIndex < items.length - 1) {
        setCurrentQuestionIndex(prev => prev + 1)
        setSelectedAnswer(null)
        setShowResult(false)
      } else {
        // Finished quiz
        const finalCorrect = correctAnswers + (selectedAnswer === (showWords ? (currentItem as VocabularyWord).translation : (currentItem as VocabularyPhrase).translation) ? 1 : 0)
        finishPractice({
          correct: finalCorrect,
          total: items.length,
          timeSpent: Math.round((Date.now() - startTime) / 1000)
        })
      }
    }, [currentQuestionIndex, items.length, correctAnswers, selectedAnswer, showWords, currentItem, startTime, finishPractice])

    const correctAnswer = useMemo(() => showWords ? 
      (currentItem as VocabularyWord).translation : 
      (currentItem as VocabularyPhrase).translation, [showWords, currentItem])

    return (
      <div className="space-y-4 sm:space-y-6">
        {/* Header - Mobile optimized */}
        <div className="flex items-center justify-between gap-2">
          <button
            onClick={resetPractice}
            className="flex items-center gap-1 sm:gap-2 px-4 py-2.5 sm:px-4 sm:py-2 bg-gray-700 hover:bg-gray-600 rounded-lg text-white transition-colors duration-200 text-sm sm:text-base touch-manipulation"
          >
            ‚Üê <span className="hidden sm:inline">–ù–∞–∑–∞–¥</span>
          </button>
          <div className="flex gap-1 sm:gap-2">
            <button
              onClick={() => setShowWords(true)}
              className={`px-3 py-2 sm:px-3 sm:py-1 rounded-lg text-sm sm:text-sm transition-colors duration-200 touch-manipulation ${
                showWords ? 'bg-green-500 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
              }`}
            >
              –°–ª–æ–≤–∞
            </button>
            <button
              onClick={() => setShowWords(false)}
              className={`px-3 py-2 sm:px-3 sm:py-1 rounded-lg text-sm sm:text-sm transition-colors duration-200 touch-manipulation ${
                !showWords ? 'bg-green-500 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
              }`}
            >
              –§—Ä–∞–∑–∏
            </button>
          </div>
        </div>

        {/* Progress - Mobile optimized */}
        <div className="text-center">
          <div className="text-gray-300 mb-2 text-sm sm:text-base">
            –ü–∏—Ç–∞–Ω–Ω—è {currentQuestionIndex + 1} –∑ {items.length}
          </div>
          <div className="text-green-400 text-xs sm:text-sm mb-2">
            –ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {correctAnswers}
          </div>
          <div className="w-full h-2 bg-gray-700 rounded-full overflow-hidden">
            <div 
              className="h-full bg-gradient-to-r from-green-500 to-emerald-500 transition-all duration-300"
              style={{ width: `${((currentQuestionIndex + 1) / items.length) * 100}%` }}
            />
          </div>
        </div>

        {/* Question - Mobile optimized */}
        <div className="bg-gradient-to-br from-green-600/20 to-emerald-600/20 rounded-lg sm:rounded-xl p-3 sm:p-4 md:p-6 border border-green-500/30">
          <div className="text-center mb-4 sm:mb-6">
            <h3 className="text-white text-base sm:text-lg md:text-xl mb-2">–û–±–µ—Ä—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–µ—Ä–µ–∫–ª–∞–¥:</h3>
            <div className="text-green-300 text-lg sm:text-xl md:text-2xl lg:text-3xl font-bold px-2">
              {showWords ? (currentItem as VocabularyWord).word : (currentItem as VocabularyPhrase).phrase}
            </div>
            {showWords && (
              <div className="text-green-200 text-sm sm:text-base md:text-lg mt-2">
                {(currentItem as VocabularyWord).transcription}
              </div>
            )}
          </div>

          {/* Options - Mobile optimized */}
          <div className="grid gap-2 sm:gap-3">
            {options.map((option, index) => {
              const isSelected = selectedAnswer === option
              const isCorrect = option === correctAnswer
              const isWrong = showResult && isSelected && !isCorrect

              return (
                <button
                  key={index}
                  onClick={() => !showResult && handleAnswer(option)}
                  disabled={showResult}
                  className={`p-4 sm:p-4 rounded-lg text-left transition-all duration-200 text-sm sm:text-base touch-manipulation min-h-[48px] ${
                    showResult
                      ? isCorrect
                        ? 'bg-green-600 text-white border-2 border-green-400'
                        : isWrong
                        ? 'bg-red-600 text-white border-2 border-red-400'
                        : 'bg-gray-700 text-gray-300'
                      : 'bg-gray-700 hover:bg-gray-600 text-white'
                  }`}
                >
                  <div className="flex items-center justify-between gap-2">
                    <span className="flex-1 pr-2">{option}</span>
                    {showResult && isCorrect && <span className="text-green-200 flex-shrink-0">‚úì</span>}
                    {showResult && isWrong && <span className="text-red-200 flex-shrink-0">‚úó</span>}
                  </div>
                </button>
              )
            })}
          </div>

          {/* Next button - Mobile optimized */}
          {showResult && (
            <div className="text-center mt-4 sm:mt-6">
              <button
                onClick={nextQuestion}
                className="px-6 py-3 sm:px-6 sm:py-2 bg-green-600 hover:bg-green-700 rounded-lg text-white transition-colors duration-200 text-sm sm:text-base touch-manipulation min-w-[120px]"
              >
                {currentQuestionIndex === items.length - 1 ? (
                  <>
                    <span className="sm:hidden">–ì–æ—Ç–æ–≤–æ</span>
                    <span className="hidden sm:inline">–ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ç–µ—Å—Ç</span>
                  </>
                ) : (
                  <>
                    <span className="sm:hidden">–î–∞–ª—ñ</span>
                    <span className="hidden sm:inline">–ù–∞—Å—Ç—É–ø–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è</span>
                  </>
                )}
              </button>
            </div>
          )}
        </div>
      </div>
    )
  }

  // Drag and Drop Component - Mobile optimized
  const DragDropComponent = () => {
    return (
      <div className="space-y-4 sm:space-y-6">
        {/* Header - Mobile optimized */}
        <div className="flex items-center justify-between">
          <button
            onClick={resetPractice}
            className="flex items-center gap-1 sm:gap-2 px-4 py-2.5 sm:px-4 sm:py-2 bg-gray-700 hover:bg-gray-600 rounded-lg text-white transition-colors duration-200 text-sm sm:text-base touch-manipulation"
          >
            ‚Üê <span className="hidden sm:inline">–ù–∞–∑–∞–¥</span>
          </button>
        </div>

        {/* Under Development Message - Mobile optimized */}
        <div className="bg-gradient-to-br from-purple-600/20 to-pink-600/20 rounded-lg sm:rounded-xl p-6 sm:p-8 md:p-12 border border-purple-500/30">
          <div className="text-center">
            <div className="text-4xl sm:text-5xl md:text-6xl mb-4 sm:mb-6">üöß</div>
            <h3 className="text-white text-lg sm:text-xl md:text-2xl font-bold mb-3 sm:mb-4">–î—Ä–∞–≥ –µ–Ω–¥ –î—Ä–æ–ø</h3>
            <p className="text-purple-300 text-base sm:text-lg mb-3 sm:mb-4">–£ —Ä–æ–∑—Ä–æ–±—Ü—ñ</p>
            <p className="text-gray-400 text-xs sm:text-sm">–¶–µ–π —Ä–µ–∂–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∏ –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –Ω–µ–∑–∞–±–∞—Ä–æ–º!</p>
          </div>
        </div>
      </div>
    )
  }

  // Results Component
  const ResultsComponent = () => {
    if (!practiceResults) return null

    const percentage = Math.round((practiceResults.correct / practiceResults.total) * 100)
    const minutes = Math.floor(practiceResults.timeSpent / 60)
    const seconds = practiceResults.timeSpent % 60

    const getScoreMessage = () => {
      if (percentage >= 90) return "–í—ñ–¥–º—ñ–Ω–Ω–æ! üèÜ"
      if (percentage >= 75) return "–î—É–∂–µ –¥–æ–±—Ä–µ! üåü"
      if (percentage >= 60) return "–î–æ–±—Ä–µ! üëç"
      if (percentage >= 40) return "–ù–µ–ø–æ–≥–∞–Ω–æ! üí™"
      return "–ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞! üìö"
    }

    const getScoreColor = () => {
      if (percentage >= 90) return "text-yellow-400"
      if (percentage >= 75) return "text-green-400"
      if (percentage >= 60) return "text-blue-400"
      if (percentage >= 40) return "text-purple-400"
      return "text-red-400"
    }

    return (
      <div className="space-y-4 sm:space-y-6">
        {/* Header - Mobile optimized */}
        <div className="text-center">
          <h2 className="text-xl sm:text-2xl md:text-3xl font-bold text-white mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø—Ä–∞–∫—Ç–∏–∫–∏</h2>
          <p className="text-gray-300 text-sm sm:text-base">–û—Å—å –≤–∞—à—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏!</p>
        </div>

        {/* Results Card - Mobile optimized */}
        <div className="bg-gradient-to-br from-gray-800/95 to-gray-900/95 rounded-lg sm:rounded-xl p-4 sm:p-6 md:p-8 border border-gray-600/50">
          {/* Score - Mobile optimized */}
          <div className="text-center mb-6 sm:mb-8">
            <div className={`text-3xl sm:text-4xl md:text-6xl font-bold mb-2 ${getScoreColor()}`}>
              {percentage}%
            </div>
            <div className={`text-lg sm:text-xl md:text-2xl font-semibold mb-3 sm:mb-4 ${getScoreColor()}`}>
              {getScoreMessage()}
            </div>
            <div className="text-gray-300 text-sm sm:text-base">
              {practiceResults.correct} –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –∑ {practiceResults.total} –ø–∏—Ç–∞–Ω—å
            </div>
          </div>

          {/* Statistics - Mobile optimized */}
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-3 sm:gap-4 md:gap-6 mb-6 sm:mb-8">
            {/* Correct Answers */}
            <div className="bg-green-600/20 rounded-lg p-3 sm:p-4 border border-green-500/30">
              <div className="text-center">
                <div className="text-xl sm:text-2xl font-bold text-green-400 mb-1">
                  {practiceResults.correct}
                </div>
                <div className="text-green-300 text-xs sm:text-sm">
                  –ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
                </div>
              </div>
            </div>

            {/* Wrong Answers */}
            <div className="bg-red-600/20 rounded-lg p-3 sm:p-4 border border-red-500/30">
              <div className="text-center">
                <div className="text-xl sm:text-2xl font-bold text-red-400 mb-1">
                  {practiceResults.total - practiceResults.correct}
                </div>
                <div className="text-red-300 text-xs sm:text-sm">
                  –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
                </div>
              </div>
            </div>

            {/* Time Spent */}
            <div className="bg-blue-600/20 rounded-lg p-3 sm:p-4 border border-blue-500/30">
              <div className="text-center">
                <div className="text-xl sm:text-2xl font-bold text-blue-400 mb-1">
                  {minutes > 0 ? `${minutes}:${seconds.toString().padStart(2, '0')}` : `${seconds}—Å`}
                </div>
                <div className="text-blue-300 text-xs sm:text-sm">
                  –í–∏—Ç—Ä–∞—á–µ–Ω–æ —á–∞—Å—É
                </div>
              </div>
            </div>
          </div>

          {/* Progress Bar - Mobile optimized */}
          <div className="mb-6 sm:mb-8">
            <div className="flex justify-between text-xs sm:text-sm text-gray-300 mb-2">
              <span>–ü—Ä–æ–≥—Ä–µ—Å</span>
              <span>{percentage}%</span>
            </div>
            <div className="w-full h-3 sm:h-4 bg-gray-700 rounded-full overflow-hidden">
              <div 
                className={`h-full transition-all duration-1000 rounded-full ${
                  percentage >= 75 
                    ? 'bg-gradient-to-r from-green-500 to-emerald-500' 
                    : percentage >= 50
                    ? 'bg-gradient-to-r from-blue-500 to-cyan-500'
                    : 'bg-gradient-to-r from-red-500 to-orange-500'
                }`}
                style={{ width: `${percentage}%` }}
              />
            </div>
          </div>

          {/* Action Buttons - Mobile optimized */}
          <div className="flex flex-col gap-3 sm:gap-3 md:gap-4 justify-center">
            <button
              onClick={resetPractice}
              className="px-6 py-3 sm:px-6 sm:py-3 bg-purple-600 hover:bg-purple-700 rounded-lg text-white font-medium transition-colors duration-200 text-sm sm:text-base touch-manipulation min-h-[48px]"
            >
              <span className="sm:hidden">–©–µ —Ä–∞–∑</span>
              <span className="hidden sm:inline">–ü—Ä–∞–∫—Ç–∏–∫—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑</span>
            </button>
            <button
              onClick={() => {
                setActiveTab('practice')
                resetPractice()
              }}
              className="px-6 py-3 sm:px-6 sm:py-3 bg-gray-700 hover:bg-gray-600 rounded-lg text-white font-medium transition-colors duration-200 text-sm sm:text-base touch-manipulation min-h-[48px]"
            >
              <span className="sm:hidden">–Ü–Ω—à–∏–π —Ä–µ–∂–∏–º</span>
              <span className="hidden sm:inline">–í–∏–±—Ä–∞—Ç–∏ —ñ–Ω—à–∏–π —Ä–µ–∂–∏–º</span>
            </button>
            <button
              onClick={onClose}
              className="px-6 py-3 sm:px-6 sm:py-3 bg-blue-600 hover:bg-blue-700 rounded-lg text-white font-medium transition-colors duration-200 text-sm sm:text-base touch-manipulation min-h-[48px]"
            >
              <span className="sm:hidden">–î–æ —Å–ª–æ–≤–Ω–∏–∫–∞</span>
              <span className="hidden sm:inline">–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ —Å–ª–æ–≤–Ω–∏–∫–∞</span>
            </button>
          </div>
        </div>

        {/* Tips - Mobile optimized */}
        <div className="bg-gradient-to-r from-purple-600/20 to-blue-600/20 rounded-lg p-3 sm:p-4 border border-purple-500/30">
          <div className="text-center">
            <h3 className="text-white font-semibold mb-2 text-sm sm:text-base">üí° –ü–æ—Ä–∞–¥–∏ –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è</h3>
            <div className="text-purple-300 text-xs sm:text-sm">
              {percentage >= 90 ? 
                "–ß—É–¥–æ–≤–∞ —Ä–æ–±–æ—Ç–∞! –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∞–±–æ —Ä–µ–∂–∏–º–∏ –ø—Ä–∞–∫—Ç–∏–∫–∏." :
                percentage >= 75 ?
                "–ú–∞–π–∂–µ —ñ–¥–µ–∞–ª—å–Ω–æ! –ü–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ª–æ–≤–∞, —è–∫—ñ –≤–∏–∫–ª–∏–∫–∞—é—Ç—å —Ç—Ä—É–¥–Ω–æ—â—ñ." :
                percentage >= 50 ?
                "–î–æ–±—Ä–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—è —á–∞—Å—Ç—ñ—à–µ –¥–ª—è –∫—Ä–∞—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤." :
                "–ù–µ –∑–¥–∞–≤–∞–π—Ç–µ—Å—è! –†–µ–≥—É–ª—è—Ä–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞ –¥–æ–ø–æ–º–æ–∂–µ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏."
              }
            </div>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-2 sm:p-4 modal-container" onClick={onClose}>
      <div 
        className="bg-gradient-to-br from-gray-800/95 to-gray-900/95 backdrop-blur-lg rounded-xl sm:rounded-2xl p-3 sm:p-4 md:p-6 lg:p-8 max-w-4xl w-full max-h-[90vh] sm:h-auto sm:max-h-[85vh] md:max-h-[80vh] border border-gray-600/50 modal-content overflow-y-auto" 
        onClick={(e) => e.stopPropagation()}
        onTouchStart={handleTouchStart}
        onTouchMove={handleTouchMove}
        onTouchEnd={handleTouchEnd}
      >
        {/* Swipe indicator - Mobile only */}
        <div className="sm:hidden flex justify-center pt-2 pb-1">
          <div className="w-12 h-1 bg-gray-600 rounded-full"></div>
        </div>

        {/* Header - Mobile optimized with safe area */}
        <div className="flex items-center justify-between mb-4 sm:mb-6 pt-safe">
          <div className="flex items-center gap-2 sm:gap-3 md:gap-4">
            <div className="w-10 h-10 sm:w-12 sm:h-12 md:w-16 md:h-16 bg-gradient-to-br from-purple-500 to-blue-600 rounded-xl flex items-center justify-center text-lg sm:text-xl md:text-2xl">
              {category.emoji}
            </div>
            <div className="min-w-0 flex-1">
              <h2 className="text-lg sm:text-xl md:text-2xl font-bold text-white truncate">{category.title}</h2>
              <p className="text-gray-300 text-xs sm:text-sm md:text-base line-clamp-2">{category.description}</p>
            </div>
          </div>
          <button
            onClick={onClose}
            className="w-10 h-10 sm:w-8 sm:h-8 md:w-10 md:h-10 bg-gray-700 hover:bg-gray-600 rounded-lg flex items-center justify-center text-gray-300 hover:text-white transition-colors duration-200 flex-shrink-0 touch-manipulation"
          >
            ‚úï
          </button>
        </div>

        {/* Tab Navigation - Mobile optimized */}
        <div className="flex gap-1 sm:gap-2 mb-4 sm:mb-6 overflow-x-auto pb-1">
          <button
            onClick={() => setActiveTab('words')}
            className={`px-4 py-2 sm:px-4 sm:py-2 rounded-lg font-medium transition-all duration-200 text-sm sm:text-sm whitespace-nowrap touch-manipulation ${
              activeTab === 'words'
                ? 'bg-purple-500 text-white'
                : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
            }`}
          >
            –°–ª–æ–≤–∞ ({category.words.length})
          </button>
          <button
            onClick={() => setActiveTab('phrases')}
            className={`px-4 py-2 sm:px-4 sm:py-2 rounded-lg font-medium transition-all duration-200 text-sm sm:text-sm whitespace-nowrap touch-manipulation ${
              activeTab === 'phrases'
                ? 'bg-purple-500 text-white'
                : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
            }`}
          >
            –§—Ä–∞–∑–∏ ({category.phrases.length})
          </button>
          <button
            onClick={() => setActiveTab('practice')}
            className={`px-4 py-2 sm:px-4 sm:py-2 rounded-lg font-medium transition-all duration-200 text-sm sm:text-sm whitespace-nowrap touch-manipulation ${
              activeTab === 'practice'
                ? 'bg-gradient-to-r from-green-500 to-blue-500 text-white shadow-lg'
                : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
            }`}
          >
            <span className="hidden sm:inline">üéØ </span>–ü—Ä–∞–∫—Ç–∏–∫–∞
          </button>
        </div>

        {/* Content - Mobile optimized with proper scrolling */}
        <div className="grid gap-2 sm:gap-3 md:gap-4 pb-safe modal-body">
          {practiceState === 'active' && practiceMode === 'flashcards' ? (
            <FlashcardsComponent />
          ) : practiceState === 'active' && practiceMode === 'quiz' ? (
            <QuizComponent />
          ) : practiceState === 'active' && practiceMode === 'dragdrop' ? (
            <DragDropComponent />
          ) : practiceState === 'results' ? (
            <ResultsComponent />
          ) : activeTab === 'words' ? (
            // Words Grid - Mobile optimized
            category.words.map((word, index) => (
              <div
                key={index}
                className="bg-gradient-to-r from-gray-700/50 to-gray-800/50 rounded-lg sm:rounded-xl p-2.5 sm:p-3 md:p-4 border border-gray-600/30 hover:border-purple-500/50 transition-all duration-300 hover:scale-[1.01] sm:hover:scale-[1.02]"
              >
                <div className="flex justify-between items-center gap-2">
                  <div className="flex-1 min-w-0">
                    <div className="flex flex-col sm:flex-col md:flex-row md:items-center md:gap-4">
                      <h3 className="text-white font-semibold text-sm sm:text-base md:text-lg truncate">{word.word}</h3>
                      <span className="text-purple-300 text-xs sm:text-sm md:text-base">{word.transcription}</span>
                    </div>
                    <span className="text-gray-300 text-xs sm:text-sm md:text-base">{word.translation}</span>
                  </div>
                  <div className="w-5 h-5 sm:w-6 sm:h-6 md:w-8 md:h-8 bg-purple-500/20 rounded-lg flex items-center justify-center flex-shrink-0">
                    <span className="text-purple-300 text-xs sm:text-sm md:text-base">üîä</span>
                  </div>
                </div>
              </div>
            ))
          ) : activeTab === 'phrases' ? (
            // Phrases Grid - Mobile optimized
            category.phrases.map((phrase, index) => (
              <div
                key={index}
                className="bg-gradient-to-r from-gray-700/50 to-gray-800/50 rounded-lg sm:rounded-xl p-2.5 sm:p-3 md:p-4 border border-gray-600/30 hover:border-purple-500/50 transition-all duration-300 hover:scale-[1.01] sm:hover:scale-[1.02]"
              >
                <div className="flex justify-between items-start gap-2">
                  <div className="flex-1 min-w-0">
                    <h3 className="text-white font-semibold text-sm sm:text-base md:text-lg mb-1 line-clamp-2">{phrase.phrase}</h3>
                    <span className="text-gray-300 text-xs sm:text-sm md:text-base">{phrase.translation}</span>
                  </div>
                  <div className="w-5 h-5 sm:w-6 sm:h-6 md:w-8 md:h-8 bg-purple-500/20 rounded-lg flex items-center justify-center flex-shrink-0">
                    <span className="text-purple-300 text-xs sm:text-sm md:text-base">üîä</span>
                  </div>
                </div>
              </div>
            ))
          ) : (
            // Practice Modes - Mobile optimized
            <div className="space-y-4 sm:space-y-4">
              <div className="text-center mb-6 sm:mb-6">
                <h3 className="text-white text-xl sm:text-xl md:text-2xl font-bold mb-3">–í–∏–±–µ—Ä—ñ—Ç—å —Ä–µ–∂–∏–º –ø—Ä–∞–∫—Ç–∏–∫–∏</h3>
                <p className="text-gray-300 text-sm sm:text-sm md:text-base px-2">–û–±–µ—Ä—ñ—Ç—å –∑—Ä—É—á–Ω–∏–π –¥–ª—è –≤–∞—Å —Å–ø–æ—Å—ñ–± –≤–∏–≤—á–µ–Ω–Ω—è –º–∞—Ç–µ—Ä—ñ–∞–ª—É</p>
              </div>

              {/* Practice Mode Cards - Mobile optimized */}
              <div className="grid gap-3 sm:gap-4 md:gap-6">
                {/* Flashcards Mode */}
                <button 
                  onClick={() => startPractice('flashcards')}
                  className="bg-gradient-to-r from-blue-600/20 to-cyan-600/20 rounded-lg sm:rounded-xl p-4 sm:p-4 md:p-6 border border-blue-500/30 hover:border-blue-400/60 transition-all duration-300 cursor-pointer group hover:scale-[1.01] sm:hover:scale-[1.02] touch-manipulation min-h-[80px] text-left w-full"
                >
                  <div className="flex items-center gap-3 sm:gap-4">
                    <div className="w-12 h-12 sm:w-12 sm:h-12 md:w-16 md:h-16 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-lg sm:rounded-xl flex items-center justify-center text-xl sm:text-xl md:text-2xl group-hover:scale-110 transition-transform duration-300 flex-shrink-0">
                      üÉè
                    </div>
                    <div className="flex-1 min-w-0">
                      <h4 className="text-white font-bold text-base sm:text-lg md:text-xl mb-1">–ö–∞—Ä—Ç–∫–∏</h4>
                      <p className="text-gray-300 text-sm sm:text-sm md:text-base mb-2 line-clamp-2">–í–∏–≤—á–∞–π—Ç–µ —Å–ª–æ–≤–∞ —Ç–∞ —Ñ—Ä–∞–∑–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–∞—Ä—Ç–æ–∫</p>
                      <div className="flex gap-1 sm:gap-2 text-xs flex-wrap">
                        <span className="bg-blue-500/20 text-blue-300 px-2 py-1 rounded text-xs">–°–ª–æ–≤–∞: {category.words.length}</span>
                        <span className="bg-cyan-500/20 text-cyan-300 px-2 py-1 rounded text-xs">–§—Ä–∞–∑–∏: {category.phrases.length}</span>
                      </div>
                    </div>
                    <div className="text-blue-400 text-xl sm:text-xl md:text-2xl group-hover:translate-x-1 transition-transform duration-300 flex-shrink-0">
                      ‚Üí
                    </div>
                  </div>
                </button>

                {/* Quiz Mode */}
                <button 
                  onClick={() => startPractice('quiz')}
                  className="bg-gradient-to-r from-green-600/20 to-emerald-600/20 rounded-lg sm:rounded-xl p-4 sm:p-4 md:p-6 border border-green-500/30 hover:border-green-400/60 transition-all duration-300 cursor-pointer group hover:scale-[1.01] sm:hover:scale-[1.02] touch-manipulation min-h-[80px] text-left w-full"
                >
                  <div className="flex items-center gap-3 sm:gap-4">
                    <div className="w-12 h-12 sm:w-12 sm:h-12 md:w-16 md:h-16 bg-gradient-to-r from-green-500 to-emerald-500 rounded-lg sm:rounded-xl flex items-center justify-center text-xl sm:text-xl md:text-2xl group-hover:scale-110 transition-transform duration-300 flex-shrink-0">
                      üìù
                    </div>
                    <div className="flex-1 min-w-0">
                      <h4 className="text-white font-bold text-base sm:text-lg md:text-xl mb-1">–¢–µ—Å—Ç–∏</h4>
                      <p className="text-gray-300 text-sm sm:text-sm md:text-base mb-2 line-clamp-2">–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–≤–æ—ó –∑–Ω–∞–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ç–µ—Å—Ç–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å</p>
                      <div className="flex gap-1 sm:gap-2 text-xs flex-wrap">
                        <span className="bg-green-500/20 text-green-300 px-2 py-1 rounded text-xs">–ú–Ω–æ–∂–∏–Ω–Ω–∏–π –≤–∏–±—ñ—Ä</span>
                        <span className="bg-emerald-500/20 text-emerald-300 px-2 py-1 rounded text-xs">–ü–µ—Ä–µ–∫–ª–∞–¥</span>
                      </div>
                    </div>
                    <div className="text-green-400 text-xl sm:text-xl md:text-2xl group-hover:translate-x-1 transition-transform duration-300 flex-shrink-0">
                      ‚Üí
                    </div>
                  </div>
                </button>

                {/* Drag and Drop Mode */}
                <button 
                  onClick={() => startPractice('dragdrop')}
                  className="bg-gradient-to-r from-purple-600/20 to-pink-600/20 rounded-lg sm:rounded-xl p-4 sm:p-4 md:p-6 border border-purple-500/30 hover:border-purple-400/60 transition-all duration-300 cursor-pointer group hover:scale-[1.01] sm:hover:scale-[1.02] touch-manipulation min-h-[80px] text-left w-full"
                >
                  <div className="flex items-center gap-3 sm:gap-4">
                    <div className="w-12 h-12 sm:w-12 sm:h-12 md:w-16 md:h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg sm:rounded-xl flex items-center justify-center text-xl sm:text-xl md:text-2xl group-hover:scale-110 transition-transform duration-300 flex-shrink-0">
                      üéØ
                    </div>
                    <div className="flex-1 min-w-0">
                      <h4 className="text-white font-bold text-base sm:text-lg md:text-xl mb-1">–î—Ä–∞–≥ –µ–Ω–¥ –î—Ä–æ–ø</h4>
                      <p className="text-gray-300 text-sm sm:text-sm md:text-base mb-2 line-clamp-2">–ó'—î–¥–Ω–∞–π—Ç–µ —Å–ª–æ–≤–∞ –∑ —ó—Ö –ø–µ—Ä–µ–∫–ª–∞–¥–∞–º–∏ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è–º</p>
                      <div className="flex gap-1 sm:gap-2 text-xs flex-wrap">
                        <span className="bg-purple-500/20 text-purple-300 px-2 py-1 rounded text-xs">–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ</span>
                        <span className="bg-pink-500/20 text-pink-300 px-2 py-1 rounded text-xs">–í–µ—Å–µ–ª–æ</span>
                      </div>
                    </div>
                    <div className="text-purple-400 text-xl sm:text-xl md:text-2xl group-hover:translate-x-1 transition-transform duration-300 flex-shrink-0">
                      ‚Üí
                    </div>
                  </div>
                </button>
              </div>


            </div>
          )}
        </div>
      </div>
    </div>
  )
}

export default function VocabularyPage() {
  const [selectedCategory, setSelectedCategory] = useState<Category | null>(null)
  const [isLoaded, setIsLoaded] = useState(false)
  const [completedCategories] = useState<Set<string>>(new Set())
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)

  useEffect(() => {
    setIsLoaded(true)
  }, [])

  const handleCategoryClick = (category: Category) => {
    setSelectedCategory(category)
  }

  const closeModal = () => {
    setSelectedCategory(null)
  }

  const toggleMobileMenu = () => {
    setMobileMenuOpen(!mobileMenuOpen)
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-black via-gray-900 to-indigo-950 relative overflow-hidden">
      {/* Animated Background */}
      <div className="absolute inset-0 opacity-60">
        <div className="absolute top-0 left-0 w-full h-full bg-gradient-to-br from-purple-700/40 via-transparent to-blue-700/40 animate-pulse"></div>
        <div className="absolute top-0 left-0 w-full h-full bg-gradient-to-tl from-pink-600/30 via-transparent to-cyan-600/30 animate-pulse" style={{ animationDelay: '2s' }}></div>
      </div>

      {/* Navigation - Optimized for mobile */}
      <nav className={`relative z-10 flex items-center justify-between p-3 sm:p-4 md:p-6 transition-all duration-1000 ${isLoaded ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-8'}`}>
        <Link href="/" className="flex items-center gap-2 sm:gap-3 hover:scale-105 transition-transform duration-300">
          <div className="w-8 h-8 sm:w-10 sm:h-10 md:w-12 md:h-12 bg-gradient-to-r from-purple-500 to-blue-500 rounded-xl flex items-center justify-center text-white font-bold text-sm sm:text-lg md:text-xl shadow-xl shadow-purple-500/50">
            T
          </div>
          <span className="text-white text-base sm:text-lg md:text-xl font-semibold">Travelingo</span>
        </Link>

        {/* Desktop Navigation */}
        <div className="hidden md:flex items-center gap-8 text-gray-300">
          <Link href="/" className="hover:text-white transition-all duration-200 hover:scale-110 hover:text-purple-300">–ì–æ–ª–æ–≤–Ω–∞</Link>
          <Link href="/tenses" className="hover:text-white transition-all duration-200 hover:scale-110 hover:text-blue-300">–ß–∞—Å–∏</Link>
          <span className="text-purple-400 font-semibold">–°–ª–æ–≤–Ω–∏–∫</span>
          <Link href="/practice" className="hover:text-white transition-all duration-200 hover:scale-110 hover:text-cyan-300">–ü—Ä–∞–∫—Ç–∏–∫–∞</Link>
        </div>

        {/* Mobile Menu Button */}
        <button 
          onClick={toggleMobileMenu}
          className="md:hidden w-8 h-8 sm:w-10 sm:h-10 bg-gray-800/80 backdrop-blur-sm rounded-lg flex items-center justify-center text-white hover:bg-gray-700/80 transition-colors duration-200"
        >
          <div className="flex flex-col gap-1">
            <div className={`w-4 h-0.5 sm:w-5 bg-current transition-transform duration-300 ${mobileMenuOpen ? 'rotate-45 translate-y-1.5' : ''}`}></div>
            <div className={`w-4 h-0.5 sm:w-5 bg-current transition-opacity duration-300 ${mobileMenuOpen ? 'opacity-0' : ''}`}></div>
            <div className={`w-4 h-0.5 sm:w-5 bg-current transition-transform duration-300 ${mobileMenuOpen ? '-rotate-45 -translate-y-1.5' : ''}`}></div>
          </div>
        </button>

        {/* Mobile Menu Overlay */}
        {mobileMenuOpen && (
          <div className="md:hidden fixed inset-0 z-50">
            {/* Backdrop */}
            <div 
              className="absolute inset-0 bg-black/60 backdrop-blur-sm transition-opacity duration-300"
              onClick={toggleMobileMenu}
            ></div>
            
            {/* Slide-out Menu */}
            <div className={`absolute top-0 right-0 h-full w-80 max-w-[85vw] bg-gray-900/95 backdrop-blur-xl border-l border-gray-600/50 shadow-2xl transform transition-transform duration-300 ease-out ${
              mobileMenuOpen ? 'translate-x-0' : 'translate-x-full'
            }`}>
              {/* Menu Header */}
              <div className="flex items-center justify-between p-6 border-b border-gray-700/50">
                <div className="flex items-center gap-3">
                  <div className="w-8 h-8 bg-gradient-to-r from-purple-500 to-blue-500 rounded-lg flex items-center justify-center text-white font-bold text-sm">
                    T
                  </div>
                  <span className="text-white text-lg font-semibold">Travelingo</span>
                </div>
                <button 
                  onClick={toggleMobileMenu}
                  className="w-10 h-10 bg-gray-700/80 rounded-lg flex items-center justify-center text-white hover:bg-gray-600/80 transition-colors"
                >
                  ‚úï
                </button>
              </div>

              {/* Menu Items */}
              <nav className="p-6 space-y-2">
                <Link 
                  href="/" 
                  className="text-gray-300 hover:text-purple-300 hover:bg-gray-800/50 px-4 py-4 rounded-xl transition-all duration-200 flex items-center gap-3 group"
                  onClick={toggleMobileMenu}
                >
                  <span className="w-2 h-2 bg-purple-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity"></span>
                  –ì–æ–ª–æ–≤–Ω–∞
                </Link>
                <div className="bg-purple-600/30 text-purple-300 px-4 py-4 rounded-xl font-semibold flex items-center gap-3">
                  <span className="w-2 h-2 bg-pink-400 rounded-full"></span>
                  –°–ª–æ–≤–Ω–∏–∫
                </div>
                <Link 
                  href="/practice" 
                  className="text-gray-300 hover:text-cyan-300 hover:bg-gray-800/50 px-4 py-4 rounded-xl transition-all duration-200 flex items-center gap-3 group"
                  onClick={toggleMobileMenu}
                >
                  <span className="w-2 h-2 bg-cyan-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity"></span>
                  –ü—Ä–∞–∫—Ç–∏–∫–∞
                </Link>
              </nav>

              {/* Menu Footer */}
              <div className="absolute bottom-6 left-6 right-6">
                <div className="text-center text-gray-500 text-sm">
                  –í–∏–≤—á–∞–π—Ç–µ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É –¥–ª—è –ø–æ–¥–æ—Ä–æ–∂–µ–π
                </div>
              </div>
            </div>
          </div>
        )}
      </nav>

      {/* Main Content */}
      <div className="relative z-10 max-w-6xl mx-auto px-3 sm:px-4 md:px-6 pt-2 sm:pt-2 md:pt-4">
        {/* Header - Mobile optimized */}
        <div className={`text-center mb-8 sm:mb-12 md:mb-20 transition-all duration-1000 delay-200 ${isLoaded ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-8'}`}>
          <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-4 sm:mb-6 md:mb-8">
            –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è
            <span className="bg-gradient-to-r from-purple-400 via-pink-400 to-blue-400 bg-clip-text text-transparent block animate-pulse">
              –ø–æ–¥–æ—Ä–æ–∂–µ–π
            </span>
          </h1>
          <p className="text-gray-200 text-base sm:text-lg md:text-xl lg:text-2xl max-w-3xl mx-auto px-4 sm:px-6">
            –ü—Ä–æ–π–¥—ñ—Ç—å —à–ª—è—Ö –ø–æ–¥–æ—Ä–æ–∂—ñ –≤—ñ–¥ –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è –¥–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ–¥–æ–º—É
          </p>
        </div>

        {/* Journey Path - Mobile optimized and simplified */}
        <div className={`relative min-h-[1800px] sm:min-h-[2000px] md:min-h-[2400px] lg:min-h-[2800px] transition-all duration-500 ${isLoaded ? 'opacity-100' : 'opacity-0'}`}>
          
          {/* Simple grid layout for mobile */}
          <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-6 sm:gap-8 md:gap-12 p-4 sm:p-6 md:p-8">
            {vocabularyCategories.map((category, index) => (
              <div
                key={category.id}
                className={`flex flex-col items-center justify-center transition-all duration-300 hover:scale-105 cursor-pointer group`}
                onClick={() => handleCategoryClick(category)}
              >
                {/* Main Category Circle - Much bigger on mobile */}
                <div className={`relative w-24 h-24 sm:w-28 sm:h-28 md:w-32 md:h-32 lg:w-36 lg:h-36 rounded-full border-4 sm:border-4 md:border-5 lg:border-6 transition-all duration-300 backdrop-blur-sm ${
                  completedCategories.has(category.id)
                    ? 'bg-gradient-to-r from-green-400 via-emerald-500 to-green-600 border-green-300 shadow-xl shadow-green-400/50'
                    : 'bg-gradient-to-r from-purple-500 via-blue-600 to-indigo-600 border-purple-300 shadow-xl shadow-purple-500/50'
                } group-hover:shadow-2xl group-hover:border-white/80`}>
                  
                  {/* Category Number Badge */}
                  <div className="absolute -top-2 -left-2 sm:-top-3 sm:-left-3 w-8 h-8 sm:w-10 sm:h-10 md:w-12 md:h-12 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center border-2 sm:border-3 border-white shadow-lg text-white text-sm sm:text-base md:text-lg font-bold z-10">
                    {index + 1}
                  </div>

                  {/* Completion Checkmark */}
                  {completedCategories.has(category.id) && (
                    <div className="absolute -top-2 -right-2 sm:-top-3 sm:-right-3 w-8 h-8 sm:w-10 sm:h-10 md:w-12 md:h-12 bg-gradient-to-r from-green-400 to-green-600 rounded-full flex items-center justify-center border-2 sm:border-3 border-white shadow-lg z-10">
                      <span className="text-white text-sm sm:text-base md:text-lg font-bold">‚úì</span>
                    </div>
                  )}

                  {/* Category Emoji - Much bigger */}
                  <div className="relative w-full h-full flex items-center justify-center text-4xl sm:text-5xl md:text-6xl lg:text-7xl z-5 group-hover:scale-110 transition-transform duration-200">
                    {category.emoji}
                  </div>
                </div>

                {/* Category Title - Better spacing and sizing */}
                <div className="mt-4 sm:mt-5 md:mt-6 text-center max-w-[140px] sm:max-w-[160px] md:max-w-[180px]">
                  <div className="bg-black/80 backdrop-blur-sm rounded-lg px-3 py-2 sm:px-4 sm:py-2.5 border border-gray-600/50 shadow-lg group-hover:border-purple-400/60 transition-all duration-200">
                    <h3 className="text-white font-semibold text-sm sm:text-base md:text-lg text-center leading-tight">
                      {category.title}
                    </h3>
                  </div>
                  
                  {/* Word count indicator - visible on mobile */}
                  <div className="mt-2 flex justify-center gap-1 text-xs">
                    <span className="bg-purple-500/70 px-2 py-1 rounded text-white font-medium">
                      {category.words.length} —Å–ª—ñ–≤
                    </span>
                    <span className="bg-blue-500/70 px-2 py-1 rounded text-white font-medium">
                      {category.phrases.length} —Ñ—Ä–∞–∑
                    </span>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* Simple progress indicator at bottom */}
          <div className="mt-8 mb-6 text-center">
            <div className="inline-flex items-center gap-2 bg-black/80 backdrop-blur-sm rounded-full px-4 py-2 border border-gray-600/50">
              <span className="text-white text-sm font-medium">
                –í–∏–≤—á–µ–Ω–æ: {completedCategories.size}/{vocabularyCategories.length}
              </span>
              <div className="w-20 h-2 bg-gray-700 rounded-full overflow-hidden">
                <div 
                  className="h-full bg-gradient-to-r from-purple-500 to-green-500 rounded-full transition-all duration-500"
                  style={{ width: `${(completedCategories.size / vocabularyCategories.length) * 100}%` }}
                ></div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Modal */}
      {selectedCategory && (
        <VocabularyModal category={selectedCategory} onClose={closeModal} />
      )}
    </div>
  )
} 